{"version":3,"sources":["components/filters/items.js","components/filters/items-query.js","components/filters/time-query.js","components/filters/ipv-query.js","components/tables/paths-table.js","utils/common.js","components/viewers/path-chart.js","constants.js","components/viewers/path-info.js","components/graphs/force-directed-graph.js","components/loaders/request.js","components/filters/preview.js","App.js","index.js"],"names":["ItemsBox","props","handleItemsFilterDelete","bind","handleItemsFilterClear","e","this","onItemsFilterDelete","itemsFilterID","target","getAttribute","onItemsFilterClear","boxContent","items","length","i","push","className","key","onClick","itemID","Component","SearchBar","handleSearchQueryChange","handleSearchBarReset","handleKeyDown","handleKeyUp","handleArrowUp","handleArrowDown","handleItemPressed","onSearchBarChange","value","itemFocused","paginateBy","currentPage","maxPage","onJumpToPageChange","onItemFocused","tail","itemFocusedCandidate","currentPageCandidate","mask","String","onItemPressed","keyCode","type","onChange","searchQuery","onKeyDown","onKeyUp","SortBar","handleFieldCLick","sortRules","parentElement","name","active","count","asc","matchIndex","onSortRulesChange","FilterContent","handleItemFocusedChange","handleJumpToPage","handleItemsFilterSelect","undefined","Number","itemName","onItemsFilterSelect","filterID","sort","a","b","weight","pageNumber","slice","processedItems","paginateItems","sortItems","rows","item","itemIdx","focused","pressed","itemPressed","onItemFocusedChange","id","prepareRows","statistics","ContentRow","highlightSearchQuery","modifiedSpan","substring","chunks","split","additionalClasses","join","onMouseEnter","title","toLocaleString","Paginator","handlePreviousPage","handleNextPage","handleFocusOut","onBlur","Statistics","shownFrom","shownTo","itemsShown","itemsTotal","ItemsFilter","state","handleItemFocused","handleSortRulesChange","onTrashCanClick","setState","document","getElementById","childNodes","pageInput","element","classList","contains","remove","add","ip","toLowerCase","indexOf","hideIPs","test","Math","ceil","filterItems","calculateStatistics","calculateMaxPage","shownFilter","selectedItems","SearchQueryNavigation","prepareButtons","handleShownFilterChange","onShownFilterChange","buttons","itemsFilters","forEach","itemFilter","idx","ItemsQuery","remapItems","containers","getElementsByClassName","query","unshift","onQueryChange","aggregations","buckets","map","doc_count","strikeQuery","TimeQuery","handleDateTimeChange","handleEndDateBlur","handleStartDateBlur","timeRange","start","end","newQuery","datetimeTo","datetimeFrom","endDate","startDate","moment","utc","clone","subtract","strikeData","dateFormat","timeFormat","pickerClassName","input","onEndDateBlur","onStartDateBlur","IPvQuery","onIPv4Clicked","onIPv6Clicked","toggleSelection","ipv6","IPv6","Contents","handleSortFieldCLick","currentTarget","columnName","pathsCount","fieldName","_source","odd","abs","selectedPath","onItemClicked","colSpan","cellSpacing","cellPadding","paths","Path","highlightSearch","handleItemCLicked","index","src","dest","src_host","dest_host","src_site","dest_site","src_VO","dest_VO","src_production","dest_production","PathsTable","pathID","onPathSelected","onHopSelected","selectedHop","Set","Array","from","size","searchFields","buffer","k","j","filterPaths","countPaths","handleHideShow","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","dispatchUrl","url","urlSearchParams","urlParams","URLSearchParams","mustConditions","JSON","parse","get","es_query","bool","must","unix","sources","sources_hosts","destinations","destinations_hosts","virtual_organisations","condition","range","timestamp","gte","lte","term","should","conditionTerms","terms","DispatchUrl","packUrl","srcShould","destShould","parameters","stringify","PackUrl","preparePathData","pathInfo","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","outlierColor","padding","itemRadius","filter","path","filterWrongMeasurements","ttlsRtts","ttls","rtts","xCoords","rttsValues","values","rttsByTtls","col","row","PathChart","getOptions","higherZero","number","every","convertStats","stats","min","q1","median","q3","max","toFixed","event","pathNavigation","_model","tooltips","callbacks","tooltipItems","xLabel","boxplotLabel","hoveredOutlierIndex","violinLabel","chartElement","iconClassList","pathInfoContainer","chartHeight","clientHeight","restScreenHeight","getElementsByTagName","style","height","pathChartRef","pathChartData","options","ref","handleChartResize","legend","chartInstance","config","API_URL","ASNumberLabel","asnData","asn","localStorage","getItem","fetch","response","json","response_content","status","setItem","href","PathNode","isHovered","variablePart","nodeType","extraValue","handleEnter","onMouseLeave","handleLeave","PathHop","handleHopSelected","hopNumber","hopSelected","stdDev","PathInfo","pathInfoRef","React","createRef","pathViewerFragments","scrollBarRef","getPathFragments","pathChart","current","prevProps","prevState","snapshot","scrollTop","scrollHeight","elements","flag","scrollTo","top","behavior","pathInfoData","pathsStats","content","pathData","ttl","hop","offset","destNumber","console","log","pathFragments","shapes","SphereGeometry","Node","pathHash","getLabel","color","shape","Link","source","hopStats","completed","curvature","rotation","distance","getDistance","velocity","getVelocity","dist","exp","counter","PI","GraphData","nodes","links","nodesConnectionsCounter","node","link","calculateCurvature","calculateRotation","Object","ForceDirectedGraph","graphData","graphRef","focusOnHop","prepareData","getLinkLabel","handleHopPressed","linkId","d3Force","responseData","hopPressed","refresh","position","distRatio","hypot","x","y","z","cameraPosition","hits","record","hops","addNode","previousNode","missedNode","addLink","jsonData","linkWidth","linkCurvature","d","linkCurveRotation","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkColor","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleSpeed","nodeLabel","n","linkLabel","l","showNavInfo","onLinkClick","nodeThreeObject","Mesh","MeshBasicMaterial","RequestLoader","hidden","ItemsPreview","focusOnFilter","container","queryContainer","click","IPv6Preview","switchIPv","triggerRequest","setTimeout","TimePreview","focusDatetimeFrom","focusDatetimeTo","focusInput","toISOString","replace","FiltersPreview","itemsFiltersContent","App","currentUrl","interruptedUrl","pathTableData","graphVisualisation","threeDimensions","linksPower","showMissedHops","graphNavigation","queryContainerRef","preLoaderContainer","preLoaderErrors","loaderContainer","loaderErrors","handleQueryChange","handlePathSelected","getData","window","location","search","retry","Date","innerHTML","append","history","pushState","origin","alert","message","error","loader","then","res","confirm","ReactDOM","render"],"mappings":"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","file":"static/js/main.3acd2372.chunk.js","sourcesContent":["import './css/items.css';\nimport '../../icons/iconmonstr-iconic-font-1.3.0/css/iconmonstr-iconic-font.min.css'\nimport React, { Component } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\n\nfunction IfIPv4(ip) {\n  return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip);\n\n}\n\nclass ItemsBox extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleItemsFilterDelete = this.handleItemsFilterDelete.bind(this);\n    this.handleItemsFilterClear = this.handleItemsFilterClear.bind(this);\n  }\n\n  handleItemsFilterDelete(e) {\n    this.props.onItemsFilterDelete(this.props.itemsFilterID, e.target.getAttribute(\"itemID\"))\n  }\n\n  handleItemsFilterClear() {\n    this.props.onItemsFilterClear(this.props.itemsFilterID)\n  }\n\n  render() {\n    let boxContent = [];\n    if (this.props.items.length) {\n      for (let i = 0; i < this.props.items.length; i++) {\n        boxContent.push(\n          <button\n            className={\"selected-item text-truncate\"}\n            key={\"btn-\" + this.props.items[i]}\n            onClick={this.handleItemsFilterDelete}\n            itemID={this.props.items[i]}\n          >\n            {this.props.items[i]}\n          </button>\n        )\n      }\n      return(\n        <div className={\"selected-items-box-wrapper\"}>\n          <div className={\"selected-items-box\"}>\n            <div className={\"selected-items-box-empty\"}>\n              <button onClick={this.handleItemsFilterClear}>\n                <i className=\"im im-x-mark-circle\"/>\n              </button>\n            </div>\n            <PerfectScrollbar>\n              <div className={\"item-box-scroll-content\"}>\n                {boxContent}\n              </div>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className={\"selected-items-box-wrapper\"}>\n          <div className={\"selected-items-box\"}>\n            <div key={\"item-box-empty\"} className={\"no-data-container\"}>\n              <span className={\"no-data\"}>No items selected</span>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nclass SearchBar extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this);\n    this.handleSearchBarReset = this.handleSearchBarReset.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleArrowUp = this.handleArrowUp.bind(this);\n    this.handleArrowDown = this.handleArrowDown.bind(this);\n    this.handleItemPressed = this.handleItemPressed.bind(this);\n  }\n\n  handleSearchQueryChange(e) {\n    this.props.onSearchBarChange(e.target.value)\n  }\n\n  handleSearchBarReset() {\n    this.props.onSearchBarChange(\"\")\n  }\n\n  handleArrowUp() {\n    const { itemFocused, paginateBy, currentPage, maxPage, onJumpToPageChange, onItemFocused, tail } = this.props;\n    let itemFocusedCandidate = itemFocused;\n    let currentPageCandidate = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    if (itemFocused > 0) {\n      itemFocusedCandidate --;\n      onItemFocused(itemFocusedCandidate)\n    } else {\n      if (currentPage.value > 1) {\n        currentPageCandidate.value = currentPage.value - 1;\n        currentPageCandidate.mask = String(currentPage.value - 1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(paginateBy - 1)\n      } else {\n        currentPageCandidate.value = maxPage;\n        currentPageCandidate.mask = String(maxPage);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(tail - 1)\n      }\n    }\n  }\n\n  handleArrowDown() {\n    const { itemFocused, paginateBy, currentPage, maxPage, onJumpToPageChange, onItemFocused, tail } = this.props;\n    let itemFocusedCandidate = itemFocused;\n    let currentPageCandidate = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    if (currentPage.value < maxPage) {\n      if (itemFocused < paginateBy - 1) {\n        itemFocusedCandidate ++;\n        onItemFocused(itemFocusedCandidate)\n      } else {\n        currentPageCandidate.value = currentPage.value + 1;\n        currentPageCandidate.mask = String(currentPage.value + 1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(0)\n      }\n    } else {\n      if (itemFocused < tail - 1) {\n        itemFocusedCandidate ++;\n        onItemFocused(itemFocusedCandidate)\n      } else {\n        currentPageCandidate.value = 1;\n        currentPageCandidate.mask = String(1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(0)\n      }\n    }\n\n  }\n\n  handleItemPressed() {\n    this.props.onItemPressed(this.props.itemFocused)\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 38) {\n      this.handleArrowUp()\n    } else if (e.keyCode === 40) {\n      this.handleArrowDown()\n    } else if (e.keyCode === 13) {\n      this.handleItemPressed()\n    }\n  }\n\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      this.props.onItemPressed(null)\n    }\n  }\n\n  render () {\n    return (\n      <div className={\"items-filter-searchbar\"}>\n        <span>Search</span>\n        <input\n          className={\"items-filter-searchbar-input\"}\n          type=\"text\"\n          onChange={this.handleSearchQueryChange}\n          value={this.props.searchQuery}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n        />\n        <button onClick={this.handleSearchBarReset} className={\"reset-searchbar-btn\"}>\n          <i className=\"im im-x-mark-circle\"/>\n        </button>\n      </div>\n    )\n  }\n}\n\nclass SortBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleFieldCLick = this.handleFieldCLick.bind(this)\n  }\n\n  handleFieldCLick(e) {\n    const sortRules = this.props.sortRules;\n    if (e.target.parentElement.getAttribute(\"itemID\") === \"name\") {\n      sortRules.name.active = true;\n      sortRules.count.active = false;\n      sortRules.name.asc = !this.props.sortRules.name.asc;\n    } else {\n      sortRules.count.active = true;\n      sortRules.name.active = false;\n      sortRules.count.asc = !this.props.sortRules.count.asc;\n    }\n\n    sortRules.matchIndex.active = false;\n    this.props.onSortRulesChange(sortRules)\n  }\n\n  render() {\n    return (\n      <div className={\"items-filter-sortbar\"}>\n        <button onClick={this.handleFieldCLick} itemID={\"name\"} className={\"items-filter-sortbar-field name\" + (this.props.sortRules.name.asc ? \"\": \" rotated\")}>\n          <h5 className={this.props.sortRules.name.active ? \"active\": \"\"}>Name</h5>\n          <span><i className=\"im im-arrow-up\"/></span>\n        </button>\n        <button onClick={this.handleFieldCLick} itemID={\"count\"} className={\"items-filter-sortbar-field count\"  + (this.props.sortRules.count.asc ? \"\": \" rotated\")}>\n          <h5 className={this.props.sortRules.count.active ? \"active\": \"\"}>Count</h5>\n          <span><i className=\"im im-arrow-up\"/></span>\n        </button>\n      </div>\n    )\n  }\n}\n\nclass FilterContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleItemFocusedChange = this.handleItemFocusedChange.bind(this);\n    this.handleJumpToPage = this.handleJumpToPage.bind(this);\n    this.handleItemsFilterSelect = this.handleItemsFilterSelect.bind(this);\n  }\n\n  handleJumpToPage(currentPage) {\n    this.props.onJumpToPageChange(currentPage)\n  }\n\n  handleItemFocusedChange(itemID) {\n    if (itemID !== undefined) {\n      this.props.onItemFocused(Number(itemID))\n    }\n  }\n\n  handleItemsFilterSelect(itemName) {\n    this.props.onItemsFilterSelect(this.props.filterID, itemName)\n  }\n\n  sortItems(items) {\n\n    if (this.props.sortRules.matchIndex.active) {\n      if (this.props.sortRules.matchIndex.asc) {\n        items.sort((a, b) => (a.count > b.count ? 1: -1));\n        items.sort((a, b) => (a.weight > b.weight ? 1: -1))\n      } else {\n        items.sort((a, b) => (a.count > b.count ? 1: -1));\n        items.sort((a, b) => (a.weight < b.weight ? 1: -1))\n      }\n\n      return items\n    }\n\n    if (this.props.sortRules.name.active) {\n      if (this.props.sortRules.name.asc) {\n        items.sort((a, b) => (a.count < b.count ? 1: -1));\n        items.sort((a, b) => (a.name > b.name ? 1: -1))\n      } else {\n        items.sort((a, b) => (a.count < b.count ? 1: -1));\n        items.sort((a, b) => (a.name < b.name ? 1: -1))\n      }\n    } else {\n      if (this.props.sortRules.count.asc) {\n        items.sort((a, b) => (a.name > b.name ? 1: -1));\n        items.sort((a, b) => (a.count > b.count ? 1: -1))\n      } else {\n        items.sort((a, b) => (a.name > b.name ? 1: -1));\n        items.sort((a, b) => (a.count < b.count ? 1: -1))\n      }\n    }\n\n    return items\n  }\n\n  paginateItems(items) {\n    let pageNumber = this.props.currentPage.value;\n    --pageNumber;\n    return items.slice(pageNumber * this.props.paginateBy, (pageNumber + 1) * this.props.paginateBy);\n  }\n\n  prepareRows(items) {\n    let processedItems = this.paginateItems(this.sortItems(items));\n    let rows = [];\n\n    if (items.length) {\n      for (let i = 0; i < processedItems.length; i++) {\n        let item = processedItems[i];\n        rows.push(\n          <ContentRow\n            key={item.name}\n            name={item.name}\n            count={item.count}\n            weight={item.weight}\n            searchQuery={this.props.searchQuery}\n            itemIdx={i}\n            focused={i === this.props.itemFocused}\n            pressed={i === this.props.itemPressed}\n            onItemsFilterSelect={this.handleItemsFilterSelect}\n            onItemFocusedChange={this.handleItemFocusedChange}\n          />\n        )\n      }\n    } else {\n      rows = [<li key={\"no-data\"} className={\"filter-item no-data\"}><span>No data</span></li>]\n    }\n\n    return rows\n  }\n\n  render() {\n    return(\n      <div className={\"\"}>\n        <div className={\"filter-content\"}>\n          <ul id={\"filter-items-shown-\" + this.props.filterID} className={\"filter-content-list\"}>\n            {this.prepareRows(this.props.items)}\n          </ul>\n        </div>\n        <Paginator\n          currentPage={this.props.currentPage}\n          maxPage={this.props.maxPage}\n          onJumpToPageChange={this.props.onJumpToPageChange}\n        />\n        <Statistics statistics={this.props.statistics}/>\n      </div>\n    )\n  }\n}\n\nclass ContentRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleItemFocusedChange = this.handleItemFocusedChange.bind(this);\n    this.handleItemsFilterSelect = this.handleItemsFilterSelect.bind(this);\n    this.highlightSearchQuery = this.highlightSearchQuery.bind(this);\n  }\n\n  handleItemFocusedChange() {\n    this.props.onItemFocusedChange(this.props.itemIdx)\n  }\n\n  handleItemsFilterSelect() {\n    this.props.onItemsFilterSelect(this.props.name)\n  }\n\n  highlightSearchQuery() {\n    if (this.props.searchQuery.length) {\n      let modifiedSpan = [];\n      let name = this.props.name;\n      let substring = this.props.name.slice(this.props.weight, this.props.weight + this.props.searchQuery.length);\n      let chunks = name.split(substring);\n\n      for (let i = 0; i < chunks.length; i++) {\n        modifiedSpan.push(chunks[i]);\n        if (i + 1 !== chunks.length) {\n          modifiedSpan.push(<span key={i + substring} className={\"search-query-highlight\"}>{substring}</span>)\n        }\n      }\n\n      return modifiedSpan\n    } else {\n      return <span>{this.props.name}</span>\n    }\n  }\n\n  render() {\n    let additionalClasses = [\n      this.props.focused ? \"focused\": \"\",\n      this.props.pressed ? \"pressed\": \"\"\n    ].join(\" \");\n\n    return(\n      <li\n        key={this.props.name}\n        className={\"filter-item\" + additionalClasses ? \" \" + additionalClasses: \"\"}\n        value={this.props.name}\n        onClick={this.handleItemsFilterSelect}\n        onMouseEnter={this.handleItemFocusedChange}\n      >\n        <div className={\"filter-item-name text-truncate\"} title={this.props.name}>\n          <span>{this.highlightSearchQuery()}</span>\n        </div>\n        <div className={\"filter-name-count text-truncate\"}>\n          <span>{this.props.count.toLocaleString()}</span>\n        </div>\n      </li>\n    )\n  }\n}\n\nclass Paginator extends Component {\n  constructor (props) {\n    super(props);\n\n    this.handlePreviousPage = this.handlePreviousPage.bind(this);\n    this.handleJumpToPage = this.handleJumpToPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n    this.handleFocusOut = this.handleFocusOut.bind(this)\n  }\n\n  handlePreviousPage() {\n    let currentPage = {\n      value: this.props.currentPage.value - 1,\n      mask: this.props.currentPage.value - 1,\n    };\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  handleJumpToPage(e, currentPage) {\n    this.props.onJumpToPageChange(e, currentPage, this.props.maxPage)\n  }\n\n  handleNextPage() {\n    let currentPage = {\n      value: this.props.currentPage.value + 1,\n      mask: this.props.currentPage.value + 1,\n    };\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  handleFocusOut() {\n    const currentPage = this.props.currentPage;\n    currentPage.mask = currentPage.value;\n\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  render() {\n    return (\n      <div className={\"items-filter-paginator\"}>\n        <button onClick={this.handlePreviousPage}><i className={\"im im-angle-left\"}/></button>\n        <div className={\"page-numbers\"}>\n          <input\n            className={\"items-filter-paginator-input\"}\n            onChange={this.handleJumpToPage}\n            onBlur={this.handleFocusOut}\n            value={this.props.currentPage.mask}\n            type=\"text\"/>\n          <span>/</span>\n          <span>{this.props.maxPage}</span>\n        </div>\n        <button onClick={this.handleNextPage}><i className={\"im im-angle-right\"}/></button>\n      </div>\n    )\n  }\n}\n\nclass Statistics extends Component {\n  render() {\n    return (\n      <div className={\"items-filter-statistics\"}>\n        <p>\n          <span>Showing </span>\n          <span>{this.props.statistics.shownFrom} </span>\n          <span>to </span>\n          <span>{this.props.statistics.shownTo} </span>\n          <span>of </span>\n          <span>{this.props.statistics.itemsShown} </span>\n          <span>({this.props.statistics.itemsTotal}) </span>\n          <span>records</span>\n        </p>\n      </div>\n    )\n  }\n}\n\nclass ItemsFilter extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      searchQuery: \"\",\n      currentPage: {\n        value: 1,\n        mask: \"1\"\n      },\n      paginateBy: 10,\n      sortRules: {\n        name: {\n          asc: true,\n          active: false\n        },\n        count: {\n          asc: false,\n          active: true\n        },\n        matchIndex: {\n          asc:true,\n          active: false\n        }\n      },\n      itemFocused: 0,\n      itemPressed: null\n    };\n\n    this.handleItemFocused = this.handleItemFocused.bind(this);\n    this.handleItemPressed = this.handleItemPressed.bind(this);\n    this.handleJumpToPage = this.handleJumpToPage.bind(this);\n    this.handleSortRulesChange = this.handleSortRulesChange.bind(this);\n    this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this);\n    this.onTrashCanClick = this.onTrashCanClick.bind(this);\n  }\n\n  handleItemFocused(itemFocused) {\n    this.setState({itemFocused})\n  }\n\n  handleItemPressed(itemPressed) {\n    if (itemPressed !== null) {\n      const value = document.getElementById(\"filter-items-shown-\" + this.props.filterID)\n        .childNodes[itemPressed].getAttribute(\"value\");\n\n      this.props.onItemsFilterSelect(this.props.filterID, value)\n    }\n\n    this.setState({itemPressed})\n  }\n\n  handleJumpToPage(e, currentPage, maxPage) {\n    if (e !== null) {\n      let pageInput = e.target.value;\n      if (pageInput === \"\") {\n        currentPage = {\n          value: this.state.currentPage.value,\n          mask: pageInput,\n        };\n      } else {\n        currentPage = {\n          value: Number(pageInput),\n          mask: pageInput\n        }\n      }\n    }\n    if ((0 === currentPage.value) || (currentPage.value > maxPage)) {\n      if (0 === currentPage.value) {\n        currentPage.value = maxPage;\n        currentPage.mask = String(maxPage)\n      }\n      if (currentPage.value > maxPage) {\n        currentPage.value = 1;\n        currentPage.mask = String(1)\n      }\n    }\n\n    this.setState({currentPage})\n  }\n\n  handleSortRulesChange(sortRules) {\n    this.setState({sortRules})\n  }\n\n  handleSearchQueryChange(searchQuery) {\n    const currentPage = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    let sortRules = this.state.sortRules;\n    sortRules.matchIndex.active = !!searchQuery.length;\n\n    this.setState({\n      searchQuery,\n      currentPage,\n      sortRules\n    })\n  }\n\n  onTrashCanClick(e) {\n    const element = e.target.parentElement;\n    if (element.classList.contains(\"rotated\")) {\n      element.classList.remove(\"rotated\");\n    } else {\n      element.classList.add(\"rotated\");\n    }\n\n    this.props.onItemsFilterClear(this.props.filterID);\n\n    this.setState({\n      searchQuery: \"\",\n      currentPage: {\n        value: 1,\n        mask: \"1\"\n      },\n      sortRules: {\n        name: {\n          asc: true,\n          active: false\n        },\n        count: {\n          asc: false,\n          active: true\n        },\n        matchIndex: {\n          asc:false,\n          active: false\n        }\n      },\n      itemFocused: 0,\n      itemPressed: null\n    })\n  }\n\n  filterItems() {\n    let items = [];\n\n    if (this.state.searchQuery) {\n      for (let i = 0; i < this.props.items.length; i++) {\n        let item = this.props.items[i];\n        let weight = item.name.toLowerCase().indexOf(this.state.searchQuery);\n        if (weight >= 0) {\n          item.weight = weight;\n          items.push(item)\n        }\n      }\n    } else {\n      if (this.props.hideIPs) {\n        for (let i = 0; i < this.props.items.length; i++) {\n          let item = this.props.items[i];\n          if (!IfIPv4(item.name)) {\n            items.push(item)\n          }\n        }\n      } else {\n        items = this.props.items\n      }\n    }\n\n    return items\n  }\n\n  calculateStatistics(items) {\n    if (items.length === 0) {\n      return {\n        itemsShown: items.length,\n        itemsTotal: this.props.items.length,\n        shownFrom: 0,\n        shownTo: 0\n      }\n    } else {\n      const shownFrom = (this.state.currentPage.value - 1) * this.state.paginateBy + 1;\n      return {\n        itemsShown: items.length,\n        itemsTotal: this.props.items.length,\n        shownFrom: shownFrom,\n        shownTo: shownFrom + this.state.paginateBy > items.length ? items.length: shownFrom + this.state.paginateBy - 1\n      };\n    }\n  }\n\n  calculateMaxPage(items) {\n    let maxPage = 1;\n    if (items.length) {\n      maxPage = Math.ceil(items.length/this.state.paginateBy);\n    }\n    return maxPage\n  }\n\n  render() {\n    let items = this.props.items;\n    if (items.length) {\n      items = this.filterItems(items);\n    }\n\n    const statistics = this.calculateStatistics(items);\n    const maxPage = this.calculateMaxPage(items);\n\n    return (\n      <div className={\"items-filter\" + (this.props.shownFilter ? \" shown\": \"\")}>\n        <div className={\"items-filter-wrapper\"}>\n          <div className={\"items-filter-header\"}>\n            <div className={\"items-filter-reset\"}>\n              <button onClick={this.onTrashCanClick}><i className=\"im im-trash-can\"/></button>\n            </div>\n            <div className={\"items-filter-title\"}>\n              <h3>{this.props.title}</h3>\n            </div>\n          </div>\n          <div className={\"items-filter-body\"}>\n            <ItemsBox\n                items={this.props.selectedItems}\n                onItemsFilterDelete={this.props.onItemsFilterDelete}\n                itemsFilterID={this.props.filterID}\n                onItemsFilterClear={this.props.onItemsFilterClear}\n            />\n            <SearchBar\n                searchQuery={this.state.searchQuery}\n                onSearchBarChange={this.handleSearchQueryChange}\n                itemFocused={this.state.itemFocused}\n                paginateBy={this.state.paginateBy}\n                currentPage={this.state.currentPage}\n                maxPage={maxPage}\n                tail={items.length%this.state.paginateBy}\n                onJumpToPageChange={this.handleJumpToPage}\n                onItemFocused={this.handleItemFocused}\n                onItemPressed={this.handleItemPressed}\n            />\n            <SortBar\n                sortRules={this.state.sortRules}\n                onSortRulesChange={this.handleSortRulesChange}\n            />\n            <FilterContent\n                filterID={this.props.filterID}\n                searchQuery={this.state.searchQuery}\n                items={items}\n                currentPage={this.state.currentPage}\n                onJumpToPageChange={this.handleJumpToPage}\n                onItemFocused={this.handleItemFocused}\n                itemFocused={this.state.itemFocused}\n                itemPressed={this.state.itemPressed}\n                onItemsFilterSelect={this.props.onItemsFilterSelect}\n                statistics={statistics}\n                maxPage={maxPage}\n                sortRules={this.state.sortRules}\n                paginateBy={this.state.paginateBy}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ItemsFilter;","import ItemsFilter from \"./items\";\nimport './css/items-query.css';\nimport React, {Component} from 'react';\n\nclass SearchQueryNavigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.prepareButtons = this.prepareButtons.bind(this);\n    this.handleShownFilterChange = this.handleShownFilterChange.bind(this)\n  }\n\n  handleShownFilterChange(e) {\n    const shownFilter = Number(e.target.getAttribute(\"itemID\"));\n    this.props.onShownFilterChange(shownFilter)\n  }\n\n  prepareButtons() {\n    const buttons = [];\n    this.props.itemsFilters.forEach((itemFilter, idx) => {\n      buttons.push(\n        <button\n          id={`${itemFilter.id}-switcher`}\n          key={itemFilter.title}\n          className={\"search-query-item\" + (this.props.shownFilter === idx ? \" active\" : \"\")}\n          onClick={this.handleShownFilterChange}\n          itemID={idx}\n        >\n          {itemFilter.title}\n        </button>\n      )\n    });\n\n    return buttons\n  }\n\n  render() {\n    const buttons = this.prepareButtons();\n\n    return (\n      <div className={\"search-query-nav\"}>\n        {buttons}\n      </div>\n    )\n  }\n}\n\nclass ItemsQuery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shownFilter: 1\n    };\n\n    this.handleShownFilterChange = this.handleShownFilterChange.bind(this);\n    this.remapItems = this.remapItems.bind(this);\n    this.handleItemsFilterSelect = this.handleItemsFilterSelect.bind(this);\n    this.handleItemsFilterDelete = this.handleItemsFilterDelete.bind(this);\n    this.handleItemsFilterClear = this.handleItemsFilterClear.bind(this);\n  }\n\n  handleHideShow() {\n    const containers = document.getElementsByClassName(\"search-query-container\");\n    for (let i = 0; i < containers.length; i++) {\n      const classList = containers[i].classList;\n      if (classList.contains(\"opened\")) {\n        classList.remove(\"opened\")\n      } else {\n        classList.add(\"opened\")\n      }\n    }\n  }\n\n  handleShownFilterChange(shownFilter) {\n    this.setState({shownFilter})\n  }\n\n  handleItemsFilterSelect(itemsFilterID, value) {\n    let query = this.props.query;\n    if (query[itemsFilterID].indexOf(value) < 0) {\n      query[itemsFilterID].unshift(value);\n\n      this.props.onQueryChange(query)\n    }\n  }\n\n  handleItemsFilterDelete(itemsFilterID, value) {\n    let query = this.props.query;\n    let selectedItems = [];\n\n    query[itemsFilterID].forEach(item => {\n      if (String(item) !== String(value)) {\n        selectedItems.push(item)\n      }\n    });\n\n    query[itemsFilterID] = selectedItems;\n    this.props.onQueryChange(query)\n  }\n\n  handleItemsFilterClear(itemsFilterID) {\n    let query = this.props.query;\n    query[itemsFilterID] = [];\n    this.props.onQueryChange(query)\n  }\n\n  remapItems(itemsFilterID) {\n    return this.props.aggregations[itemsFilterID].buckets.map(item => {\n      return {name: item.key, count: item.doc_count}\n    })\n  }\n\n  render() {\n    let itemsFilters = [];\n    this.props.itemsFilters.forEach((itemFilter, idx) => {\n      itemsFilters.push(\n        <ItemsFilter\n          key={itemFilter.id}\n          title={itemFilter.title}\n          filterID={itemFilter.id}\n          hideIPs={itemFilter.hideIPs}\n          shownFilter={this.state.shownFilter === idx}\n          items={this.remapItems(itemFilter.id)}\n          selectedItems={this.props.query[itemFilter.id]}\n          onItemsFilterSelect={this.handleItemsFilterSelect}\n          onItemsFilterDelete={this.handleItemsFilterDelete}\n          onItemsFilterClear={this.handleItemsFilterClear}\n        />\n      )\n    });\n\n    return (\n      <div id={\"search-query\"} className={\"search-query-container opened\"}>\n        <SearchQueryNavigation\n          itemsFilters={this.props.itemsFilters}\n          shownFilter={this.state.shownFilter}\n          onShownFilterChange={this.handleShownFilterChange}\n        />\n        <div className={\"search-query\"} onMouseEnter={this.props.strikeQuery}>\n          {itemsFilters}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ItemsQuery;\n","import DatetimeRangePicker from 'react-datetime-range-picker';\nimport './css/time-query.css';\nimport React, {Component} from 'react';\nimport moment from \"moment\";\n\n\nclass TimeQuery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n    this.handleEndDateBlur = this.handleEndDateBlur.bind(this);\n    this.handleStartDateBlur = this.handleStartDateBlur.bind(this);\n    this.onTrashCanClick = this.onTrashCanClick.bind(this);\n  }\n\n  handleDateTimeChange(timeRange) {\n    const {start, end} = timeRange;\n\n    let newQuery = {...this.props.query};\n    newQuery.datetimeTo = end;\n    newQuery.datetimeFrom = start;\n\n    this.props.onQueryChange(newQuery)\n  }\n\n  handleEndDateBlur(endDate) {\n    if (endDate < this.props.query.datetimeFrom) {\n      let newQuery = {...this.props.query};\n      newQuery.datetimeTo = this.props.query.datetimeFrom;\n      newQuery.datetimeFrom = endDate;\n\n      this.props.onQueryChange(newQuery)\n    }\n  }\n\n  handleStartDateBlur(startDate) {\n    if (startDate > this.props.query.datetimeTo) {\n      let newQuery = {...this.props.query};\n      newQuery.datetimeTo = startDate;\n      newQuery.datetimeFrom = this.props.query.datetimeTo;\n\n      this.props.onQueryChange(newQuery)\n    }\n  }\n\n  onTrashCanClick(e) {\n    const element = e.target.parentElement;\n    if (element.classList.contains(\"rotated\")) {\n      element.classList.remove(\"rotated\");\n    } else {\n      element.classList.add(\"rotated\");\n    }\n\n    const datetimeTo = moment().utc();\n    let newQuery = {...this.props.query};\n    newQuery.datetimeTo = datetimeTo;\n    newQuery.datetimeFrom = datetimeTo.clone().subtract(1, \"minutes\");\n    this.props.onQueryChange(newQuery)\n  }\n\n  render() {\n    const {strikeData} = this.props;\n\n    return (\n      <div id={\"time-query\"} className={\"search-query-container opened\"} onMouseEnter={strikeData}>\n        <div className={\"time-query\"}>\n          <div className={\"time-query-wrapper\"}>\n            <div>\n              <div className={\"items-filter-header\"}>\n                <div className={\"items-filter-reset\"}>\n                  <button onClick={this.onTrashCanClick}><i className=\"im im-trash-can\"/></button>\n                </div>\n                <div className={\"items-filter-title\"}>\n                  <h3>Time range</h3>\n                </div>\n              </div>\n              <div>\n                <div className={\"time-query-labels\"}>\n                  <div>\n                    <span>from:</span>\n                  </div>\n                  <div>\n                    <span>to:</span>\n                  </div>\n                </div>\n                <DatetimeRangePicker\n                  dateFormat={\"YYYY-MM-DD\"}\n                  timeFormat={\"H:mm:ss\"}\n                  pickerClassName={\"datetime-picker\"}\n                  startDate={this.props.query.datetimeFrom}\n                  endDate={this.props.query.datetimeTo}\n                  input={true}\n                  utc={true}\n                  onChange={this.handleDateTimeChange}\n                  onEndDateBlur={this.handleEndDateBlur}\n                  onStartDateBlur={this.handleStartDateBlur}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TimeQuery;\n","import './css/ipv-query.css';\nimport React, {Component} from 'react';\n\n\nclass IPvQuery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onIPv4Clicked = this.onIPv4Clicked.bind(this);\n    this.onIPv6Clicked = this.onIPv6Clicked.bind(this);\n    this.toggleSelection = this.toggleSelection.bind(this);\n    this.onTrashCanClick = this.onTrashCanClick.bind(this);\n  }\n\n  onTrashCanClick(e) {\n    const element = e.target.parentElement;\n    if (element.classList.contains(\"rotated\")) {\n      element.classList.remove(\"rotated\");\n    } else {\n      element.classList.add(\"rotated\");\n    }\n\n    this.toggleSelection(false)\n  }\n\n  toggleSelection(ipv6) {\n    let newQuery = {...this.props.query};\n    newQuery.IPv6 = ipv6;\n    this.props.onQueryChange(newQuery)\n  }\n\n  onIPv4Clicked() {\n    this.toggleSelection(false)\n  }\n\n  onIPv6Clicked() {\n    this.toggleSelection(true)\n  }\n\n  render() {\n    const { IPv6 } = this.props.query;\n\n    return (\n      <div id={\"ipv-query\"} className={\"search-query-container opened\"} onMouseEnter={this.props.strikeQuery}>\n        <div className={\"ipv-query\"}>\n          <div className={\"ipv-query-wrapper\"}>\n            <div>\n              <div className={\"items-filter-header\"}>\n                <div className={\"items-filter-reset\"}>\n                  <button onClick={this.onTrashCanClick}><i className=\"im im-trash-can\"/></button>\n                </div>\n                <div className={\"items-filter-title\"}>\n                  <h3>IP version</h3>\n                </div>\n              </div>\n              <div className={\"ipv-content\"}>\n                <div className={\"ipv-names\"}>\n                  <div className={\"ipv-name\"}>\n                    <span>IPv4</span>\n                  </div>\n                  <div className={\"ipv-name\"}>\n                    <span>IPv6</span>\n                  </div>\n                </div>\n                <div className={\"ipv-selections\"}>\n                  <div id={\"ipv4-selection\"} className={\"ipv-selection ipv4\" + (IPv6 ? \" hidden\": \" active\")} onClick={this.onIPv4Clicked}>\n                    <div className={\"selection-indicator\"}>selected</div>\n                  </div>\n                  <div id={\"ipv6-selection\"} className={\"ipv-selection ipv6\" + (IPv6 ? \" active\": \" hidden\")} onClick={this.onIPv6Clicked}>\n                    <div className={\"selection-indicator\"}>selected</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default IPvQuery;","import './css/paths-table.css';\nimport React, {Component} from 'react';\n\n\nclass SearchBar extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this);\n    this.handleSearchBarReset = this.handleSearchBarReset.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleArrowUp = this.handleArrowUp.bind(this);\n    this.handleArrowDown = this.handleArrowDown.bind(this);\n    this.handleItemPressed = this.handleItemPressed.bind(this);\n  }\n\n  handleSearchQueryChange(e) {\n    this.props.onSearchBarChange(e.target.value)\n  }\n\n  handleSearchBarReset() {\n    this.props.onSearchBarChange(\"\")\n  }\n\n  handleArrowUp() {\n    const { itemFocused, paginateBy, currentPage, maxPage, onJumpToPageChange, onItemFocused, tail } = this.props;\n    let itemFocusedCandidate = itemFocused;\n    let currentPageCandidate = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    if (itemFocused > 0) {\n      itemFocusedCandidate --;\n      onItemFocused(itemFocusedCandidate)\n    } else {\n      if (currentPage.value > 1) {\n        currentPageCandidate.value = currentPage.value - 1;\n        currentPageCandidate.mask = String(currentPage.value - 1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(paginateBy - 1)\n      } else {\n        currentPageCandidate.value = maxPage;\n        currentPageCandidate.mask = String(maxPage);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(tail - 1)\n      }\n    }\n  }\n\n  handleArrowDown() {\n    const { itemFocused, paginateBy, currentPage, maxPage, onJumpToPageChange, onItemFocused, tail } = this.props;\n    let itemFocusedCandidate = itemFocused;\n    let currentPageCandidate = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    if (currentPage.value < maxPage) {\n      if (itemFocused < paginateBy - 1) {\n        itemFocusedCandidate ++;\n        onItemFocused(itemFocusedCandidate)\n      } else {\n        currentPageCandidate.value = currentPage.value + 1;\n        currentPageCandidate.mask = String(currentPage.value + 1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(0)\n      }\n    } else {\n      if (itemFocused < tail - 1) {\n        itemFocusedCandidate ++;\n        onItemFocused(itemFocusedCandidate)\n      } else {\n        currentPageCandidate.value = 1;\n        currentPageCandidate.mask = String(1);\n        onJumpToPageChange(null, currentPageCandidate, maxPage);\n        onItemFocused(0)\n      }\n    }\n\n  }\n\n  handleItemPressed() {\n    this.props.onItemPressed(this.props.itemFocused)\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 38) {\n      this.handleArrowUp()\n    } else if (e.keyCode === 40) {\n      this.handleArrowDown()\n    } else if (e.keyCode === 13) {\n      this.handleItemPressed()\n    }\n  }\n\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      this.props.onItemPressed(null)\n    }\n  }\n\n  render () {\n    return (\n      <div className={\"items-filter-searchbar\"}>\n        <span>Search</span>\n        <input\n          className={\"items-filter-searchbar-input\"}\n          type=\"text\"\n          onChange={this.handleSearchQueryChange}\n          value={this.props.searchQuery}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n        />\n        <button onClick={this.handleSearchBarReset} className={\"reset-searchbar-btn\"}>\n          <i className=\"im im-x-mark-circle\"/>\n        </button>\n      </div>\n    )\n  }\n}\n\nclass Statistics extends Component {\n  render() {\n    return (\n      <div className={\"items-filter-statistics\"}>\n        <p>\n          <span>Showing </span>\n          <span>{this.props.statistics.shownFrom} </span>\n          <span>to </span>\n          <span>{this.props.statistics.shownTo} </span>\n          <span>of </span>\n          <span>{this.props.statistics.itemsShown} </span>\n          <span>({this.props.statistics.itemsTotal}) </span>\n          <span>records</span>\n        </p>\n      </div>\n    )\n  }\n}\n\nclass Paginator extends Component {\n  constructor (props) {\n    super(props);\n\n    this.handlePreviousPage = this.handlePreviousPage.bind(this);\n    this.handleJumpToPage = this.handleJumpToPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n    this.handleFocusOut = this.handleFocusOut.bind(this)\n  }\n\n  handlePreviousPage() {\n    let currentPage = {\n      value: this.props.currentPage.value - 1,\n      mask: this.props.currentPage.value - 1,\n    };\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  handleJumpToPage(e, currentPage) {\n    this.props.onJumpToPageChange(e, currentPage, this.props.maxPage)\n  }\n\n  handleNextPage() {\n    let currentPage = {\n      value: this.props.currentPage.value + 1,\n      mask: this.props.currentPage.value + 1,\n    };\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  handleFocusOut() {\n    const currentPage = this.props.currentPage;\n    currentPage.mask = currentPage.value;\n\n    this.handleJumpToPage(null, currentPage)\n  }\n\n  render() {\n    return (\n      <div className={\"paths-table-paginator\"}>\n        <div className={\"empty\"}/>\n        <button onClick={this.handlePreviousPage}><i className={\"im im-angle-left\"}/></button>\n        <div className={\"page-numbers\"}>\n          <input\n            className={\"items-filter-paginator-input\"}\n            onChange={this.handleJumpToPage}\n            onBlur={this.handleFocusOut}\n            value={this.props.currentPage.mask}\n            type=\"text\"/>\n          <span>/</span>\n          <span>{this.props.maxPage}</span>\n        </div>\n        <button onClick={this.handleNextPage}><i className={\"im im-angle-right\"}/></button>\n        <div className={\"empty\"}/>\n      </div>\n    )\n  }\n}\n\nclass Contents extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.prepareRows = this.prepareRows.bind(this);\n    this.sortItems = this.sortItems.bind(this);\n    this.handleSortFieldCLick = this.handleSortFieldCLick.bind(this);\n    this.handleItemFocusedChange = this.handleItemFocusedChange.bind(this);\n  }\n\n  handleSortFieldCLick(e) {\n    const sortRules = this.props.sortRules;\n    const element = e.currentTarget;\n    if (element.getAttribute(\"name\") === sortRules.columnName) {\n      sortRules.asc = !this.props.sortRules.asc;\n    } else {\n      sortRules.asc = element.getAttribute(\"value\") === \"asc\";\n      sortRules.columnName = element.getAttribute(\"name\")\n    }\n\n    this.props.onSortRulesChange(sortRules)\n  }\n\n  handleItemFocusedChange(itemID) {\n    if (itemID !== undefined) {\n      this.props.onItemFocused(Number(itemID))\n    }\n  }\n\n  sortItems(items) {\n    const {sortRules, pathsCount} = this.props;\n    if (sortRules.columnName === \"count\") {\n      if (sortRules.asc) {\n        items.sort((a, b) => (pathsCount[a[\"_source\"][\"route-sha1\"]] > pathsCount[b[\"_source\"][\"route-sha1\"]] ? 1: -1));\n      } else {\n        items.sort((a, b) => (pathsCount[a[\"_source\"][\"route-sha1\"]] < pathsCount[b[\"_source\"][\"route-sha1\"]] ? 1: -1));\n      }\n    } else {\n      const fieldName = sortRules.columnName;\n      if (sortRules.asc) {\n        items.sort((a, b) => ((a[\"_source\"][fieldName] || '') > (b[\"_source\"][fieldName] || '') ? 1: -1));\n      } else {\n        items.sort((a, b) => ((a[\"_source\"][fieldName] || '') < (b[\"_source\"][fieldName] || '') ? 1: -1));\n      }\n    }\n\n    return items\n  }\n\n  paginateItems(items) {\n    let pageNumber = this.props.currentPage.value;\n    --pageNumber;\n    return items.slice(pageNumber * this.props.paginateBy, (pageNumber + 1) * this.props.paginateBy);\n  }\n\n  prepareRows(items) {\n    let processedItems = this.paginateItems(this.sortItems(items));\n    let rows = [];\n\n    if (items.length) {\n      for (let i = 0; i < processedItems.length; i++) {\n        let item = processedItems[i];\n        rows.push(\n          <Path\n            key={item._source[\"route-sha1\"]}\n            searchQuery={this.props.searchQuery}\n            itemIdx={i}\n            item={item}\n            count={this.props.pathsCount[item._source[\"route-sha1\"]]}\n            odd={Math.abs(i % 2) === 1}\n            focused={this.props.itemFocused === i}\n            pressed={this.props.selectedPath === item._source[\"route-sha1\"]}\n            onItemFocusedChange={this.handleItemFocusedChange}\n            onItemClicked={this.props.onItemPressed}\n          />\n        )\n      }\n    } else {\n      rows = [<tr key={\"no-data\"} className={\"filter-item no-data\"}><td colSpan={6}><span>No data</span></td></tr>]\n    }\n\n    return rows\n  }\n\n  render() {\n    const {columnName, asc} = this.props.sortRules;\n\n    return (\n      <div>\n        <table id={\"paths-table\"} className={\"full-width\"} cellSpacing=\"1\" cellPadding=\"0\">\n          <thead>\n          <tr className={\"table-head\"}>\n            <th>\n              <div className={\"table-column-name\"}>\n                <span>Path's ends</span>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <span>Hosts</span>\n              </div>\n            </th>\n            <th className={\"middle\"}>\n              <div className={\"table-column-name\"}>\n                <span>Sites</span>\n              </div>\n            </th>\n            <th className={\"middle\"}>\n              <div className={\"table-column-name\"}>\n                <span>Virtual Organisations</span>\n              </div>\n            </th>\n            <th className={\"small\"}>\n              <div className={\"table-column-name\"}>\n                <span>Production</span>\n              </div>\n            </th>\n            <th className={\"small\"}>\n              <div className={\"table-column-name no-border\"}>\n                <span>Count</span>\n              </div>\n            </th>\n          </tr>\n          <tr className={\"table-sub-head\"}>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"two-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"src\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"src\"} value={\"desc\"}>\n                    <span>Src</span>\n                    <span className={\"arrow\"}>{columnName === \"src\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                  <button className={\"table-row-value text-center \" + (columnName === \"dest\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"dest\"} value={\"desc\"}>\n                    <span>Dest</span>\n                    <span className={\"arrow\"}>{columnName === \"dest\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"two-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"src_host\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"src_host\"} value={\"desc\"}>\n                    <span>Src</span>\n                    <span className={\"arrow\"}>{columnName === \"src_host\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                  <button className={\"table-row-value text-center \" + (columnName === \"dest_host\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"dest_host\"} value={\"desc\"}>\n                    <span>Dest</span>\n                    <span className={\"arrow\"}>{columnName === \"dest_host\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"two-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"src_site\" && !asc ? \"rotated\": \"\")}  onClick={this.handleSortFieldCLick} name={\"src_site\"} value={\"desc\"}>\n                    <span>Src</span>\n                    <span className={\"arrow\"}>{columnName === \"src_site\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                  <button className={\"table-row-value text-center \" + (columnName === \"dest_site\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"dest_site\"} value={\"desc\"}>\n                    <span>Dest</span>\n                    <span className={\"arrow\"}>{columnName === \"dest_site\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"two-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"src_VO\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"src_VO\"} value={\"desc\"}>\n                    <span>Src</span>\n                    <span className={\"arrow\"}>{columnName === \"src_VO\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                  <button className={\"table-row-value text-center \" + (columnName === \"dest_VO\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"dest_VO\"} value={\"desc\"}>\n                    <span>Dest</span>\n                    <span className={\"arrow\"}>{columnName === \"dest_VO\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"two-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"src_production\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"src_production\"} value={\"desc\"}>\n                    <span>Src</span>\n                    <span className={\"arrow\"}>{columnName === \"src_production\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                  <button className={\"table-row-value text-center \" + (columnName === \"dest_production\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"dest_production\"} value={\"desc\"}>\n                    <span>Dest</span>\n                    <span className={\"arrow\"}>{columnName === \"dest_production\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n            <th>\n              <div className={\"table-column-name\"}>\n                <div className={\"one-lines-cell\"}>\n                  <button className={\"table-row-value text-center \" + (columnName === \"count\" && !asc ? \"rotated\": \"\")} onClick={this.handleSortFieldCLick} name={\"count\"} value={\"desc\"}>\n                    <span>Records</span>\n                    <span className={\"arrow\"}>{columnName === \"count\" ? <i className=\"im im-arrow-up\"/>:\n                      <i className=\"im im-minus\"/>}</span>\n                  </button>\n                </div>\n              </div>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.prepareRows(this.props.paths)}\n          </tbody>\n        </table>\n        <div>\n          <Paginator\n            currentPage={this.props.currentPage}\n            maxPage={this.props.maxPage}\n            onJumpToPageChange={this.props.onJumpToPageChange}\n          />\n          <Statistics statistics={this.props.statistics}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Path extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleItemFocusedChange = this.handleItemFocusedChange.bind(this);\n    this.highlightSearch = this.highlightSearch.bind(this);\n    this.handleItemCLicked = this.handleItemCLicked.bind(this);\n  }\n\n  handleItemCLicked() {\n    this.props.onItemClicked(this.props.itemIdx)\n  }\n\n  handleItemFocusedChange() {\n    this.props.onItemFocusedChange(this.props.itemIdx)\n  }\n\n  highlightSearch(value) {\n    if (this.props.searchQuery.length) {\n      let index = value.toLowerCase().indexOf(this.props.searchQuery.toLowerCase());\n      if (index >= 0) {\n        let modifiedSpan = [];\n        let substring = value.slice(index, index + this.props.searchQuery.length);\n        let chunks = value.split(substring);\n\n        for (let i = 0; i < chunks.length; i++) {\n          modifiedSpan.push(chunks[i]);\n          if (i + 1 !== chunks.length) {\n            modifiedSpan.push(<span key={i + substring} className={\"search-query-highlight\"}>{substring}</span>)\n          }\n        }\n\n        return modifiedSpan\n      } else {\n        return value\n      }\n\n    } else {\n      return value\n    }\n  }\n\n  render() {\n    const item = this.props.item._source;\n\n    return (\n      <tr onMouseEnter={this.handleItemFocusedChange}\n          onClick={this.handleItemCLicked\n          } itemID={item[\"route-sha1\"]}\n          className={\"path-table-row\" + (this.props.odd ? \" odd\": \" even\") + (this.props.focused ? \" focused\": \"\") + (this.props.pressed ? \" pressed\": \"\")}>\n        <td className={\"border-left\"}>\n          <div className={\"two-lines-cell large\"}>\n            <p className={\"table-row-value source text-left text-truncate\"} title={item.src}><span>{this.highlightSearch(item.src ? item.src: \"-\")}</span></p>\n            <p className={\"table-row-value destination text-left text-truncate\"} title={item.dest}><span>{this.highlightSearch(item.dest ? item.dest: \"-\")}</span></p>\n          </div>\n        </td>\n        <td>\n          <div className={\"two-lines-cell large\"}>\n            <p className={\"table-row-value source text-left text-truncate\"} title={item.src_host}>{this.highlightSearch(item.src_host ? item.src_host: \"-\")}</p>\n            <p className={\"table-row-value destination text-left text-truncate\"} title={item.dest_host}>{this.highlightSearch(item.dest_host ? item.dest_host: \"-\")}</p>\n          </div>\n        </td>\n        <td>\n          <div className={\"two-lines-cell middle\"}>\n            <p className={\"table-row-value source text-center text-truncate\"} title={item.src_site}>{this.highlightSearch(item.src_site ? item.src_site: \"-\")}</p>\n            <p className={\"table-row-value destination text-center text-truncate\"} title={item.dest_site}>{this.highlightSearch(item.dest_site ? item.dest_site: \"-\")}</p>\n          </div>\n        </td>\n        <td>\n          <div className={\"two-lines-cell middle\"}>\n            <p className={\"table-row-value source text-center text-truncate\"} title={item.src_VO}>{this.highlightSearch(item.src_VO ? item.src_VO: \"-\")}</p>\n            <p className={\"table-row-value destination text-center text-truncate\"} title={item.dest_VO}>{this.highlightSearch(item.dest_VO ? item.dest_VO: \"-\")}</p>\n          </div>\n        </td>\n        <td>\n          <div className={\"two-lines-cell small\"}>\n            <p className={\"table-row-value source text-center\"}>{item.src_production ?\n              <i className=\"green im im-check-mark-circle-o\"/> : <i className=\"red im im-x-mark-circle-o\"/>}</p>\n            <p className={\"table-row-value destination text-center\"}>{item.dest_production ?\n              <i className=\"green im im-check-mark-circle-o\"/> : <i className=\" red im im-x-mark-circle-o\"/>}</p>\n          </div>\n        </td>\n        <td  className={\"border-right\"}>\n          <div className={\"one-lines-cell small\"}>\n            <p className={\"table-row-value text-center border-right\"}>{this.props.count}</p>\n          </div>\n        </td>\n      </tr>\n    )\n  }\n}\n\n\nclass PathsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchQuery: \"\",\n      currentPage: {\n        value: 1,\n        mask: \"1\"\n      },\n      paginateBy: 5,\n      sortRules: {\n        columnName: \"count\",\n        asc: false\n      },\n      itemFocused: 0,\n      itemPressed: null,\n    };\n\n    this.handleJumpToPage = this.handleJumpToPage.bind(this);\n    this.handleSortRulesChange = this.handleSortRulesChange.bind(this);\n    this.handleItemFocused = this.handleItemFocused.bind(this);\n    this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this);\n    this.handleItemPressed = this.handleItemPressed.bind(this);\n  }\n\n  handleSortRulesChange(sortRules) {\n    this.setState({sortRules})\n  }\n\n  handleJumpToPage(e, currentPage, maxPage) {\n    if (e !== null) {\n      let pageInput = e.target.value;\n      if (pageInput === \"\") {\n        currentPage = {\n          value: this.state.currentPage.value,\n          mask: pageInput,\n        };\n      } else {\n        currentPage = {\n          value: Number(pageInput),\n          mask: pageInput\n        }\n      }\n    }\n    if ((0 === currentPage.value) || (currentPage.value > maxPage)) {\n      if (0 === currentPage.value) {\n        currentPage.value = maxPage;\n        currentPage.mask = String(maxPage)\n      }\n      if (currentPage.value > maxPage) {\n        currentPage.value = 1;\n        currentPage.mask = String(1)\n      }\n    }\n\n    this.setState({currentPage})\n  }\n\n  handleItemFocused(itemFocused) {\n    this.setState({itemFocused})\n  }\n\n  handleSearchQueryChange(searchQuery) {\n    const currentPage = {\n      value: 1,\n      mask: \"1\"\n    };\n\n    this.setState({\n      searchQuery,\n      currentPage\n    })\n  }\n\n  handleItemPressed(itemPressed) {\n    if (itemPressed !== null) {\n      this.setState({itemPressed});\n      const pathID = document.getElementsByClassName(\"path-table-row\")[itemPressed].getAttribute(\"itemID\");\n      this.props.onPathSelected(pathID);\n      this.props.onHopSelected({selectedHop: null})\n    }\n\n    this.setState({itemPressed})\n  }\n\n  calculateStatistics(items) {\n    const itemsTotal = new Set(Array.from(this.props.paths, item => item[\"_source\"][\"route-sha1\"])).size;\n\n    if (items.length === 0) {\n      return {\n        itemsShown: items.length,\n        itemsTotal: itemsTotal,\n        shownFrom: 0,\n        shownTo: 0\n      }\n    } else {\n      const shownFrom = (this.state.currentPage.value - 1) * this.state.paginateBy + 1;\n      return {\n        itemsShown: items.length,\n        itemsTotal: itemsTotal,\n        shownFrom: shownFrom,\n        shownTo: shownFrom + this.state.paginateBy > items.length ? items.length: shownFrom + this.state.paginateBy - 1\n      };\n    }\n  }\n\n  calculateMaxPage(items) {\n    let maxPage = 1;\n    if (items.length) {\n      maxPage = Math.ceil(items.length/this.state.paginateBy);\n    }\n    return maxPage\n  }\n\n  countPaths(paths){\n    const count = {};\n    for (let i = 0; i < paths.length; i++) {\n      count[paths[i][\"_source\"][\"route-sha1\"]] = 1 + (count[paths[i][\"_source\"][\"route-sha1\"]] || 0)\n    }\n\n    return count\n  }\n\n  filterPaths(paths) {\n    const {searchQuery} = this.state;\n    const searchFields = [\"src\", \"dest\", \"src_host\", \"dest_host\", \"src_site\", \"dest_site\", \"src_VO\", \"dest_VO\"];\n\n    let buffer = [], processedItems = [];\n    for (let k = 0; k < paths.length; k++) {\n      if (buffer[paths[k][\"_source\"][\"route-sha1\"]]) continue;\n      buffer[paths[k][\"_source\"][\"route-sha1\"]] = true;\n\n      if (searchQuery) {\n        for (let j = 0; j < searchFields.length; j++) {\n          if (paths[k][\"_source\"][searchFields[j]]) {\n            if (paths[k][\"_source\"][searchFields[j]].toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0) {\n              processedItems.push(paths[k]);\n              break\n            }\n          }\n        }\n      } else {\n        processedItems.push(paths[k])\n      }\n    }\n\n    return processedItems\n  }\n\n  handleHideShow() {\n    const classList = document.getElementById(\"paths-table-container\").classList;\n    if (classList.contains(\"opened\")) {\n      classList.remove(\"opened\")\n    } else {\n      classList.add(\"opened\")\n    }\n  }\n\n  render() {\n\n    const paths = this.filterPaths(this.props.paths);\n    const pathsCount = this.countPaths(this.props.paths);\n    const statistics = this.calculateStatistics(paths);\n    const maxPage = this.calculateMaxPage(paths);\n\n    return (\n      <div id={\"paths-table-container\"} className={\"paths-table opened\"}>\n        <div className={\"paths-table-switcher\"}>\n          <button onClick={this.handleHideShow} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}>\n            <i className=\"im im-arrow-down\"/>\n          </button>\n        </div>\n        <div className={\"paths-table-wrapper\"}>\n          <div>\n            <div className={\"paths-table-tools\"}>\n              <div className={\"paths-table-tool-item\"}/>\n              <div className={\"paths-table-tool-item\"}>\n                <SearchBar\n                  searchQuery={this.state.searchQuery}\n                  onSearchBarChange={this.handleSearchQueryChange}\n                  itemFocused={this.state.itemFocused}\n                  paginateBy={this.state.paginateBy}\n                  currentPage={this.state.currentPage}\n                  maxPage={maxPage}\n                  tail={paths.length % this.state.paginateBy}\n                  onJumpToPageChange={this.handleJumpToPage}\n                  onItemFocused={this.handleItemFocused}\n                  onItemPressed={this.handleItemPressed}\n                />\n              </div>\n            </div>\n            <div className={\"paths-table-body\"}>\n              <Contents\n                paths={paths}\n                pathsCount={pathsCount}\n                searchQuery={this.state.searchQuery}\n                currentPage={this.state.currentPage}\n                paginateBy={this.state.paginateBy}\n                maxPage={maxPage}\n                onJumpToPageChange={this.handleJumpToPage}\n                statistics={statistics}\n                sortRules={this.state.sortRules}\n                onSortRulesChange={this.handleSortRulesChange}\n                itemFocused={this.state.itemFocused}\n                selectedPath={this.props.selectedPath}\n                onItemFocused={this.handleItemFocused}\n                onItemPressed={this.handleItemPressed}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default PathsTable\n","import moment from \"moment\";\n\nfunction preparePathData(paths, selectedPath, pathInfo) {\n  let data = {\n    labels: [],\n    datasets: [{\n      label: 'Hops',\n      backgroundColor: 'rgba(72,72,72,0.5)',\n      borderColor: 'rgba(72,72,72,1)',\n      borderWidth: 1,\n      outlierColor: '#ff2b71',\n      padding: 10,\n      itemRadius: 0,\n      data: []\n    }],\n    pathInfo: null\n  };\n\n  if (!selectedPath) {\n    return data\n  }\n\n  paths = paths.filter((path) => path[\"_source\"][\"route-sha1\"] === selectedPath);\n  if (pathInfo.filterWrongMeasurements) {\n    paths = this.filterWrongMeasurements(paths)\n  }\n\n  if (!paths.length) {\n    return data\n  }\n\n  const ttlsRtts = paths.map(path => {\n    const ttls = path[\"_source\"][\"ttls\"];\n    const rtts = path[\"_source\"][\"rtts\"];\n    return ttls.map((element, idx) => [element, rtts[idx]])\n  });\n\n  const xCoords = [];\n  ttlsRtts[0].forEach(e => xCoords.push(e[0]));\n\n  let rtts = [];\n  ttlsRtts.forEach(rttsValues => {\n    rtts.push(rttsValues.map(values => values[1]))\n  });\n\n  const rttsByTtls = rtts[0].map((col, i) => rtts.map(row => row[i]));\n\n  data.labels = xCoords;\n  data.datasets[0].data = rttsByTtls;\n  data.pathInfo = paths[0];\n\n  return data\n}\n\nfunction DispatchUrl(urlSearchParams) {\n  const urlParams = new URLSearchParams(urlSearchParams);\n  const urlData = JSON.parse(urlParams.get(\"query\"));\n  const esQuery = urlData.es_query;\n  const mustConditions = esQuery.query.bool.must;\n\n  const query = {\n    datetimeFrom: moment.unix(urlParams.get(\"datetimeFrom\")/1000),\n    datetimeTo: moment.unix(urlParams.get(\"datetimeTo\")/1000),\n    sources: [],\n    sources_hosts: [],\n    destinations: [],\n    destinations_hosts: [],\n    virtual_organisations: [], // not here yet\n    IPv6: false\n  };\n\n  for (let i = 0; i < mustConditions.length; i++) {\n    const condition = mustConditions[i];\n    if (\"range\" in condition) {\n      query.datetimeFrom = moment.unix(condition.range.timestamp.gte/1000);\n      query.datetimeTo = moment.unix(condition.range.timestamp.lte/1000);\n    } else {\n      if (\"term\" in condition) {\n        query.IPv6 = condition.term.ipv6\n      } else {\n        for (let j = 0; j < condition.bool.should.length; j++) {\n          const conditionTerms = condition.bool.should[j].terms;\n          if (\"src\" in conditionTerms) {\n            query.sources = conditionTerms.src\n          }\n          if (\"src_host\" in conditionTerms) {\n            query.sources_hosts = conditionTerms.src_host\n          }\n          if (\"dest\" in conditionTerms) {\n            query.destinations = conditionTerms.dest\n          }\n          if (\"dest_host\" in conditionTerms) {\n            query.destinations_hosts = conditionTerms.dest_host\n          }\n        }\n      }\n    }\n  }\n\n  return query\n}\n\n/**\n * @return {string}\n */\nfunction PackUrl(query) {\n\n  const srcShould = [];\n  if (query.sources.length) {\n    srcShould.push({\n      terms: {\n        src: query.sources\n      }\n    })\n  }\n\n  if (query.sources_hosts.length) {\n    srcShould.push({\n      terms: {\n        src_host: query.sources_hosts\n      }\n    })\n  }\n\n  const destShould = [];\n  if (query.destinations.length) {\n    destShould.push({\n      terms: {\n        dest: query.destinations\n      }\n    })\n  }\n\n  if (query.destinations_hosts.length) {\n    destShould.push({\n      terms: {\n        dest_host: query.destinations_hosts\n      }\n    })\n  }\n\n  const newQuery = {\n    es_query: {\n      query: {\n        bool: {\n          must: [\n            {\n              range: {\n                timestamp: {\n                  gte: moment.unix(query.datetimeFrom)/1000,\n                  lte: moment.unix(query.datetimeTo)/1000,\n                }\n              }\n            },\n            {\n              term: {\n                ipv6: query.IPv6\n              }\n            },\n            {\n              bool: {\n                should: srcShould\n              }\n            },\n            {\n              bool: {\n                should: destShould\n              }\n            }\n          ]\n        }\n      }\n    },\n    parameters: {}\n  };\n\n  return `?query=${JSON.stringify(newQuery)}`;\n}\n\nexport const dispatchUrl = (url) => {\n  return DispatchUrl(url)\n};\n\nexport const packUrl = (query) => {\n  return PackUrl(query)\n};\n\nexport default preparePathData","import ChartComponent from 'react-chartjs-2';\nimport React, {Component} from 'react';\nimport 'chartjs-chart-box-and-violin-plot';\nimport \"./css/path-chart.css\"\nimport preparePathData from '../../utils/common'\n\n\nclass PathChart extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.getOptions = this.getOptions.bind(this);\n  }\n\n  filterWrongMeasurements(paths) {\n    const higherZero = (number) => number > 0;\n    paths = paths.filter(path => path[\"_source\"][\"rtts\"].every(higherZero));\n\n    return paths\n  }\n\n  getOptions() {\n    const convertStats = (stats) => {\n      let { min, q1, median, q3, max } = stats;\n      min = min.toFixed(2);\n      q1 = q1.toFixed(2);\n      median = median.toFixed(2);\n      q3 = q3.toFixed(2);\n      max = max.toFixed(2);\n\n      return { min, q1, median, q3, max }\n    };\n\n    return {\n      onClick: (event, item) => {\n        if (item.length) {\n          const pathNavigation = {\n            selectedHop: Number(item[0]._model.label)\n          };\n          this.props.onHopSelected(pathNavigation)\n        }\n      },\n      tooltips: {\n        callbacks: {\n          title: function (tooltipItems) {\n            return `Hop № ${tooltipItems[0].xLabel}`\n          },\n          boxplotLabel: function (item, data, stats, hoveredOutlierIndex) {\n            let {min, q1, median, q3, max} = convertStats(stats);\n            return `min: ${min} max:${max} q1:${q1} median:${median} q3:${q3}`;\n          },\n          violinLabel: function (item, data, stats) {\n            let {min, q1, median, q3, max} = convertStats(stats);\n            return [\n              `min: ${min} max:${max}`,\n              `median:${median}`,\n              `q1:${q1} q3:${q3}`\n            ]\n          },\n        }\n      }\n    }\n  }\n\n  handleHideShow() {\n    const classList = document.getElementById(\"path-chart\").classList;\n    if (classList.contains(\"opened\")) {\n      classList.remove(\"opened\")\n    } else {\n      classList.add(\"opened\")\n    }\n  }\n\n  handleChartResize() {\n    const chartElement = document.getElementById(\"path-chart\");\n    const classList = chartElement.classList;\n\n    const resizeIcon = document.getElementById(\"path-chart-resize-icon\");\n    const iconClassList = resizeIcon.classList;\n\n    const pathInfoContainer = document.getElementsByClassName(\"path-info-container\");\n\n    if (classList.contains(\"maximized\")) {\n      classList.remove(\"maximized\");\n      pathInfoContainer[0].classList.remove(\"maximize-impact\");\n\n      iconClassList.remove(\"im-minimize\");\n      iconClassList.add(\"im-maximize\")\n    } else {\n      classList.add(\"maximized\");\n\n      pathInfoContainer[0].classList.add(\"maximize-impact\");\n      iconClassList.remove(\"im-maximize\");\n      iconClassList.add(\"im-minimize\")\n    }\n\n    const chartHeight = chartElement.clientHeight;\n    const restScreenHeight = document.getElementsByTagName(\"body\")[0].clientHeight - chartHeight - 75;\n    document.getElementsByClassName(\"path-viewer-fragments\")[0].style.height = restScreenHeight + \"px\"\n  }\n\n  render() {\n    let {paths, selectedPath, pathInfo, pathChartRef} = this.props;\n    const pathChartData = preparePathData(paths, selectedPath, pathInfo);\n    const options = this.getOptions();\n\n    return (\n      <div id={\"path-chart\"} ref={pathChartRef} className={\"path-viewer-container\"}>\n        <div className={\"path-viewer\"}>\n          <div className={\"path-viewer-switcher\"}>\n            <button onClick={this.handleHideShow}>\n              <i className=\"im im-arrow-left\"/>\n            </button>\n          </div>\n          <div className={\"path-viewer-switcher resize\"}>\n            <button onClick={this.handleChartResize}>\n              <i id={\"path-chart-resize-icon\"} className=\"im im-maximize\"/>\n            </button>\n          </div>\n          <div className={\"path-viewer-content\"}>\n            <div className={\"path-viewer-wrapper chart\"}>\n              <h3>Hops chart</h3>\n              <div className={\"path-viewer-chart\"}>\n                <ChartComponent\n                  data={pathChartData}\n                  options={options}\n                  legend={false}\n                  ref={ref => this.chartInstance = ref && ref.chartInstance}\n                  type='violin'\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PathChart;\n","// Constants.js\nconst prod = {\n  url: {\n    API_URL: \"/api/\"\n  }\n};\n\nconst dev = {\n  url: {\n    API_URL: \"http://localhost:8000/api/\"\n  }\n};\n\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;","import React, {Component} from 'react';\nimport 'chartjs-chart-box-and-violin-plot';\nimport \"./css/path-info.css\"\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport preparePathData from '../../utils/common'\nimport { config } from '../../constants'\n\n\nclass ASNumberLabel extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      asnData: null\n    }\n  }\n\n  async componentDidMount() {\n    const {asn} = this.props;\n\n    let asnData = JSON.parse(localStorage.getItem(`asn-${asn}`));\n    if (!asnData) {\n      const response = await fetch(`${config.url.API_URL}asn/${asn}`);\n      // const response = await fetch(`/api/asn/${asn}`);\n      const response_content = await response.json();\n      if (response_content.status) {\n        asnData = response_content.item;\n        localStorage.setItem(`asn-${asn}`, JSON.stringify(asnData))\n      }\n    }\n\n    this.setState({asnData})\n  }\n\n  render() {\n    const {asnData} = this.state;\n\n    if (!asnData) {\n      return <div className={\"asn-label\"}>Loading...</div>\n    } else {\n      return (\n        <div className={\"asn-label\"}>\n          <table>\n            <tbody>\n            <tr>\n              <th>Name</th>\n              <td>{asnData[\"Name\"] ? asnData[\"Name\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Description</th>\n              <td>{asnData[\"Description\"] ? asnData[\"Description\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Website</th>\n              <td>\n                {asnData[\"Website\"] ? <a\n                  className={\"asn-website\"}\n                  href={asnData[\"Website\"]}\n                  target={\"_blank\"}>\n                  {asnData[\"Website\"]}\n                </a>: \"-\"}\n              </td>\n            </tr>\n            <tr>\n              <th>Country</th>\n              <td>{asnData[\"Country\"] ? asnData[\"Country\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>E-mail contracts</th>\n              <td>{asnData[\"E-mail contracts\"] ? asnData[\"E-mail contracts\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Abuse contracts</th>\n              <td>{asnData[\"Abuse contracts\"] ? asnData[\"Abuse contracts\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Traffic estimation</th>\n              <td>{asnData[\"Traffic estimation\"] ? asnData[\"Traffic estimation\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Traffic ratio</th>\n              <td>{asnData[\"Traffic ratio\"] ? asnData[\"Traffic ratio\"]: \"-\"}</td>\n            </tr>\n            <tr>\n              <th>Owner address</th>\n              <td>{asnData[\"Owner address\"] ? asnData[\"Owner address\"]: \"-\"}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nclass PathNode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHovered: false\n    }\n  }\n\n  handleEnter() {\n    this.setState({isHovered: true})\n  }\n\n  handleLeave() {\n    this.setState({isHovered: false})\n  }\n\n  render() {\n    const {nodeType, value, extraValue, label, asn} = this.props;\n    let variablePart;\n    if (extraValue) {\n      variablePart = <span>({extraValue})</span>\n    } else {\n      if (asn) {\n        variablePart = <div className={\"asn-container\"} onMouseEnter={this.handleEnter.bind(this)} onMouseLeave={this.handleLeave.bind(this)}>\n          <span>asn:</span><span>{asn}</span>{this.state.isHovered ? <ASNumberLabel asn={asn}/>: <span/>}\n        </div>\n      } else {\n        variablePart = <span/>\n      }\n    }\n\n    return (\n      <div className={\"path-fragment node \" + nodeType}>\n        <div className={\"node-type\"}>\n          <span>{label}</span>\n        </div>\n        <div className={\"node-info\"}>\n          <span title={value} >{value}</span>\n          {variablePart}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass PathHop extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleHopSelected = this.handleHopSelected.bind(this)\n  }\n\n  handleHopSelected() {\n    const {hopNumber, onHopSelected} = this.props;\n\n    const pathNavigation = {\n      selectedHop: hopNumber\n    };\n    onHopSelected(pathNavigation)\n  }\n\n  render() {\n    const { stats, hopSelected} = this.props;\n\n    return (\n      <div onClick={this.handleHopSelected} className={\"path-fragment hop stats\" + (hopSelected ? \" active\": \"\")}>\n        <div className={\"stats-group less\"}>\n          <div className={\"stats-item min\"}>\n            <span className={\"label\"}>{\"Min: \"}</span>\n            <span className={\"value\"}>{stats ? stats.min.toFixed(2): \"-\"}</span>\n          </div>\n          <div className={\"stats-item q1\"}>\n            <span className={\"label\"}>{\"Q1: \"}</span>\n            <span className={\"value\"}>{stats ? stats.q1.toFixed(2): \"-\"}</span>\n          </div>\n        </div>\n        <div className={\"stats-group middle\"}>\n          <div className={\"stats-item median\"}>\n            <span className={\"label\"}>{\"Std. dev.\"}</span>\n            <span className={\"value\"}>{stats ? stats.stdDev.toFixed(2): \"-\"}</span>\n          </div>\n          <div className={\"stats-item median\"}>\n            <span className={\"label\"}>{\"Median\"}</span>\n            <span className={\"value\"}>{stats ? stats.median.toFixed(2): \"-\"}</span>\n          </div>\n        </div>\n        <div className={\"stats-group more\"}>\n          <div className={\"stats-item max\"}>\n            <span className={\"label\"}>{\"Max: \"}</span>\n            <span className={\"value\"}>{stats ? stats.max.toFixed(2): \"-\"}</span>\n          </div>\n          <div className={\"stats-item q3\"}>\n            <span className={\"label\"}>{\"Q3: \"}</span>\n            <span className={\"value\"}>{stats ? stats.q3.toFixed(2): \"-\"}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass PathInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pathInfoRef = React.createRef();\n    this.pathViewerFragments = React.createRef();\n    this.scrollBarRef = React.createRef();\n\n    this.getPathFragments = this.getPathFragments.bind(this);\n    this.handleHopSelected = this.handleHopSelected.bind(this);\n    this.handleHideShow = this.handleHideShow.bind(this);\n  }\n\n  componentDidMount() {\n    const chartHeight = this.props.pathChart.current.clientHeight;\n    const restScreenHeight = document.getElementsByTagName(\"body\")[0].clientHeight - chartHeight - 75;\n    document.getElementsByClassName(\"path-viewer-fragments\")[0].style.height = restScreenHeight + \"px\"\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let scrollTop = -this.pathViewerFragments.current.scrollHeight/2.5;\n    const elements = document.getElementsByClassName(\"path-fragment\");\n    let flag = false;\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].classList.contains(\"active\")) {\n        flag = true;\n        break\n      } else {\n        scrollTop += elements[i].scrollHeight\n      }\n    }\n\n    if (flag) {\n      this.scrollBarRef.current[\"_container\"].scrollTo({\n        top: scrollTop,\n        behavior: \"smooth\"\n      });\n    }\n  }\n\n  filterWrongMeasurements(paths) {\n    const higherZero = (number) => number > 0;\n    paths = paths.filter(path => path[\"_source\"][\"rtts\"].every(higherZero));\n\n    return paths\n  }\n\n  getPathFragments(pathInfoData) {\n    const { selectedHop, pathsStats } = this.props;\n    const content = [];\n    const {labels, pathInfo} = pathInfoData;\n    if (pathInfo !== null) {\n\n      let pathData = {};\n      pathInfo[\"_source\"][\"ttls\"].forEach((ttl, i) => {\n        pathData[ttl] = {\n          hop: pathInfo[\"_source\"][\"hops\"][i],\n          asn: pathInfo[\"_source\"][\"asns\"][i],\n          stats: pathsStats[`${pathInfo[\"_source\"][\"route-sha1\"]}-${ttl}`]\n        };\n      });\n\n      content.push(\n        <PathNode\n          key={pathInfo[\"_source\"][\"src\"] + pathInfo[\"_source\"][\"route-sha1\"]}\n          label={\"src\"}\n          nodeType={\"src\"}\n          value={pathInfo[\"_source\"][\"src\"]}\n          extraValue={pathInfo[\"_source\"][\"src_host\"]}\n        />\n      );\n\n      let offset = 1;\n      let destNumber = Math.max(...labels);\n      labels.forEach((hopNumber, i) => {\n        while (i + offset < hopNumber) {\n          content.push(\n            <PathHop\n              key={(i + offset) + \"Hop\" + pathInfo[\"_source\"][\"route-sha1\"]}\n              hopSelected={(i + offset) === selectedHop}\n              hopNumber={(i + offset)}\n              onHopSelected={this.props.onHopSelected}\n            />\n          );\n          content.push(\n            <PathNode\n              key={(i + offset) + \"-node-\" + pathInfo[\"_source\"][\"route-sha1\"]}\n              nodeType={\"missed \" + ((i + offset) === destNumber ? \"dest\": \"hop\")}\n              label={(i + offset) === destNumber ? \"dest\": \"Node №\" + (i + offset)}\n              value={\"No data\"}\n            />\n          );\n          offset += 1;\n        }\n\n        if (hopNumber === i + offset) {\n          const {hop, asn, stats} = pathData[hopNumber];\n          content.push(\n            <PathHop\n              key={(i + offset) + \"Hop\" + pathInfo[\"_source\"][\"route-sha1\"]}\n              hopSelected={(i + offset) === selectedHop}\n              stats={stats}\n              hopNumber={(i + offset)}\n              onHopSelected={this.props.onHopSelected}\n            />\n          );\n          content.push(\n            <PathNode\n              key={(i + offset) + \"-node-\" + pathInfo[\"_source\"][\"route-sha1\"]}\n              nodeType={(i + offset) === destNumber ? \"dest\" + (pathInfo[\"_source\"][\"dest\"] === hop ? \"\":\" incomplete\") : \"hop\"}\n              label={(i + offset) === destNumber ? \"dest\": \"Node №\" + (i + offset)}\n              value={hop}\n              asn={asn}\n            />\n          )\n        }\n      })\n    } else {\n      content.push(<div key={\"path-no-data\"} className={\"no-data\"}><span>No data</span></div>)\n    }\n\n    return content\n  }\n\n  handleHideShow() {\n    const classList = this.pathInfoRef.current.classList;\n    if (classList.contains(\"opened\")) {\n      classList.remove(\"opened\")\n    } else {\n      classList.add(\"opened\")\n    }\n  }\n\n  handleHopSelected(event) {\n    console.log(event);\n    // const pathNavigation = {\n    //   selectedHop: Number(hopSelected)\n    // };\n    // this.props.onHopSelected(pathNavigation)\n  }\n\n  render() {\n    const {paths, selectedPath, pathInfo} = this.props;\n\n    const pathInfoData = preparePathData(paths, selectedPath, pathInfo);\n    const pathFragments = this.getPathFragments(pathInfoData);\n\n    return (\n      <div id={\"path-info\"} ref={this.pathInfoRef} className={\"path-viewer-container\"}>\n        <div className={\"path-viewer\"}>\n          <div className={\"path-viewer-switcher\"}>\n            <button onClick={this.handleHideShow} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}>\n              <i className=\"im im-arrow-left\"/>\n            </button>\n          </div>\n          <div className={\"path-viewer-content\"}>\n            <div className={\"path-viewer-wrapper\"}>\n              <h3>Path info</h3>\n              <div ref={this.pathViewerFragments} className={\"path-viewer-fragments\"}>\n                <PerfectScrollbar ref={this.scrollBarRef}>\n                  <div className={\"path-viewer-fragments-content\"}>\n                    {pathFragments}\n                  </div>\n                </PerfectScrollbar>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default PathInfo;\n","import React, {Component} from 'react';\nimport './css/force-directed-graph.css'\nimport {ForceGraph3D} from 'react-force-graph';\nimport {SphereGeometry, Mesh, MeshBasicMaterial} from 'three';\n\nconst shapes = {\n  \"LargeSphere\": new SphereGeometry(10, 32, 32),\n  \"sphere\": new SphereGeometry(5, 32, 32)\n};\n\nclass Node {\n  constructor(id, type, number, pathHash) {\n    this.id = id;\n    this.type = type;\n    this.number = number;\n    this.pathHash = pathHash;\n    this.label = this.getLabel();\n  }\n\n  getLabel() {\n    let label;\n    switch (this.type) {\n      case 'src':\n        label = `<span class=\"tooltip-content\">Source: ${this.id}</span>`;\n        break;\n      case 'dest':\n        label = `<span class=\"tooltip-content\">Destination: ${this.id}</span>`;\n        break;\n      case 'hop':\n        label = `<span class=\"tooltip-content\">Node №${this.number}: ${this.id}</span>`;\n        break;\n      case \"src-dest\":\n        label = `<span class=\"tooltip-content\">Source&Destination: ${this.id}</span>`;\n        break;\n      case 'missed-hop':\n        label = `<span class=\"tooltip-content\">Missed node №${this.number}</span>`;\n        break;\n      default:\n        label = this.id\n    }\n\n    return label\n  }\n\n  get color() {\n    let color;\n    switch (this.type) {\n      case \"src\":\n        color = '#ff2b83';\n        break;\n      case \"dest\":\n        color = '#0a7cb3';\n        break;\n      case \"src-dest\":\n        color = '#ad2bff';\n        break;\n      case \"missed-hop\":\n        color = '#ff832b';\n        break;\n      default:\n        color = '#484848'\n    }\n\n    return color\n  }\n\n  get shape() {\n    let shape;\n    switch (this.type) {\n      case \"src\":\n        shape = 'LargeSphere';\n        break;\n      case \"dest\":\n        shape = 'LargeSphere';\n        break;\n      case \"src-dest\":\n        shape = 'LargeSphere';\n        break;\n      default:\n        shape = 'sphere'\n    }\n\n    return shape\n  }\n}\n\nclass Link {\n  constructor(source, target, hopNumber, pathHash, hopStats, completed) {\n    this.id = `${pathHash}-${hopNumber}`;\n    this.source = source.id;\n    this.target = target.id;\n    this.hopNumber = hopNumber;\n    this.pathHash = pathHash;\n    this.hopStats = hopStats;\n    this.curvature = 0;\n    this.rotation = 0;\n    this.distance = this.getDistance();\n    this.velocity = this.getVelocity();\n    this.color = '#484848';\n    this.completed = completed;\n  }\n\n  getDistance() {\n    let dist = 5;\n    if (this.hopStats) {\n      dist = this.hopStats.median;\n      if (dist <= 5) {\n        dist = 5\n      }\n    }\n\n    return dist\n  }\n\n  getVelocity() {\n    let velocity = 0.4;\n    if (this.hopStats) {\n      if (this.hopStats.median <= 0) {\n        velocity = 0.4\n      } else {\n        velocity = Math.exp(-0.05 * (this.hopStats.median + 40));\n      }\n    }\n\n    return velocity\n  }\n\n  set calculateCurvature(counter) {\n    this.curvature = 0.3 * counter\n  }\n\n  get calculateCurvature() {\n    return this.curvature\n  }\n\n  set calculateRotation(counter) {\n    this.rotation = Number((Math.PI * counter / 6).toFixed(3))\n  }\n\n  get calculateRotation() {\n    return this.rotation\n  }\n}\n\nclass GraphData {\n  constructor() {\n    this.nodes = {};\n    this.links = {};\n\n    this.nodesConnectionsCounter = {};\n  }\n\n  addNode(node) {\n    if (node.id in this.nodes && node.type !== 'hop') {\n      if ((node.type === \"src\" && this.nodes[node.id].type === \"dest\") ||\n        (node.type === \"dest\" && this.nodes[node.id].type === \"src\")) {\n        node.type = \"src-dest\";\n        node.label = node.getLabel()\n      }\n      delete this.nodes[node.id]\n      this.nodes[node.id] = node\n    } else {\n      this.nodes[node.id] = node\n    }\n  }\n\n  addLink(link) {\n    if (!(link.id in this.links)) {\n      this.nodesConnectionsCounter[link.source] = this.nodesConnectionsCounter[link.source] ? this.nodesConnectionsCounter[link.source] + 1 : 1;\n\n      link.calculateCurvature = this.nodesConnectionsCounter[link.source];\n      link.calculateRotation = this.nodesConnectionsCounter[link.source];\n      this.links[link.id] = link;\n\n    }\n  }\n\n  jsonData() {\n    return {\n      nodes: Object.values(this.nodes),\n      links: Object.values(this.links)\n    }\n  }\n}\n\nclass ForceDirectedGraph extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      graphData: {\n        nodes: [],\n        links: []\n      }\n    };\n\n    this.graphRef = React.createRef();\n\n    this.focusOnHop = this.focusOnHop.bind(this);\n    this.prepareData = this.prepareData.bind(this);\n    this.getLinkLabel = this.getLinkLabel.bind(this);\n    this.handleHopPressed = this.handleHopPressed.bind(this);\n  }\n\n  getLinkLabel(linkId) {\n    const {pathsStats} = this.props;\n    const hopStats = pathsStats[linkId];\n    return `<div class=\"tooltip-content\">\n              <table>\n                <tr>\n                  <th><span class=\"label\">Min: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.min.toFixed(2) : \"-\"}</span></td>\n                  <th><span class=\"label\">Std. dev.: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.stdDev.toFixed(2) : \"-\"}</span></td>\n                  <th><span class=\"label\">Max: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.max.toFixed(2) : \"-\"}</span></td>\n                </tr>\n                <tr>\n                  <th><span class=\"label\">Q1: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.q1.toFixed(2) : \"-\"}</span></td>\n                  <th><span class=\"label\">Median: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.median.toFixed(2) : \"-\"}</span></td>\n                  <th><span class=\"label\">Q3: </span></th>\n                  <td><span class=\"value\">${hopStats ? hopStats.q3.toFixed(2) : \"-\"}</span></td>\n                </tr>\n            </table>\n          </div>`\n  }\n\n  componentDidMount() {\n    const graphData = this.prepareData();\n    this.graphRef.current.d3Force('link').distance(link => link.distance);\n    this.setState({graphData})\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.responseData !== prevProps.responseData) {\n      const graphData = this.prepareData();\n      this.setState({graphData})\n    }\n\n    if (this.props.selectedHop !== prevProps.selectedHop) {\n      const {selectedPath, selectedHop} = this.props;\n      this.graphRef.current.d3Force('link').distance(link => {\n        if (`${selectedPath}-${selectedHop}` === link.id) {\n          this.focusOnHop(link)\n        }\n\n        return link.distance\n      });\n    }\n  }\n\n  handleHopPressed(hopPressed) {\n    const {selectedPath, selectedHop} = this.props;\n    if (selectedPath === hopPressed.pathHash && selectedHop === hopPressed.hopNumber) {\n      this.props.onPathSelected(null);\n      this.props.onHopSelected({selectedHop: null})\n    } else {\n\n      if (selectedPath === hopPressed.pathHash && selectedHop !== hopPressed.hopNumber) {\n        this.props.onHopSelected({selectedHop: hopPressed.hopNumber})\n      } else {\n        this.props.onPathSelected(hopPressed.pathHash);\n        this.props.onHopSelected({selectedHop: hopPressed.hopNumber})\n      }\n    }\n\n    this.graphRef.current.refresh();\n\n  }\n\n  focusOnHop(hop) {\n    if (hop[\"__arrowObj\"]) {\n      const position = hop[\"__arrowObj\"].position;\n\n      const distance = 250;\n      const distRatio = 1 + distance / Math.hypot(position.x, position.y, position.z);\n\n      this.graphRef.current.cameraPosition(\n        {x: position.x * distRatio, y: position.y * distRatio, z: position.z * distRatio},\n        position,\n        3000\n      );\n    }\n  }\n\n  prepareData() {\n    const {responseData, pathsStats} = this.props;\n    const hits = responseData['hits']['hits'];\n\n    const graphData = new GraphData();\n\n    for (let i = 0; i < hits.length; i++) {\n      const record = hits[i]['_source'];\n      const pathHash = record['route-sha1'];\n\n      const hops = record['hops'];\n      const ttls = record['ttls'];\n\n      const src = new Node(record['src'], 'src', 0, pathHash);\n      graphData.addNode(src);\n      const dest = new Node(record['dest'], 'dest', hops.length - 1, pathHash);\n      graphData.addNode(dest);\n\n      const completed = dest.id === hops[hops.length - 1];\n      let previousNode = src;\n\n      let offset = 1;\n      hops.forEach((hop, idx) => {\n        const ttl = ttls[idx];\n        while (idx + offset < ttl) {\n          const missedNode = new Node(`${pathHash}-${idx + offset}`, 'missed-hop', idx + offset, pathHash);\n          graphData.addNode(missedNode);\n          graphData.addLink(new Link(previousNode, missedNode, idx + offset, pathHash, pathsStats[`${pathHash}-${idx + offset}`], completed));\n          previousNode = missedNode;\n          offset += 1\n        }\n\n        const node = new Node(hop, 'hop', idx + offset, pathHash);\n\n        if (idx !== hops.length - 1) {\n          graphData.addNode(node);\n          graphData.addLink(new Link(previousNode, node, ttl, pathHash, pathsStats[`${pathHash}-${ttl}`], completed));\n          previousNode = node\n        } else {\n          if (completed) {\n            graphData.addLink(new Link(previousNode, dest, ttl, pathHash, pathsStats[`${pathHash}-${ttl}`], completed));\n          } else {\n            graphData.addNode(node);\n            graphData.addLink(new Link(previousNode, node, ttl, pathHash, pathsStats[`${pathHash}-${ttl}`], completed));\n            graphData.addLink(new Link(node, dest, ttl + 1, pathHash, pathsStats[`${pathHash}-${ttl}`], completed));\n          }\n        }\n      })\n\n    }\n\n    return graphData.jsonData()\n\n  }\n\n  render() {\n    const {selectedPath, selectedHop} = this.props;\n\n    return (\n      <ForceGraph3D\n        graphData={this.state.graphData}\n        ref={this.graphRef}\n        backgroundColor={\"#ffffff\"}\n        linkWidth={2.5}\n        linkCurvature={d => d.curvature}\n        linkCurveRotation={d => d.rotation}\n        linkDirectionalArrowLength={10}\n        linkDirectionalArrowRelPos={1}\n        linkColor={link => link.pathHash === selectedPath ? `${selectedPath}-${selectedHop}` === link.id ? \"#21bda8\" : \"#bd1d4f\" : \"#484848\"}\n        linkDirectionalParticles={link => link.pathHash === selectedPath ? 3 : 0}\n        linkDirectionalParticleWidth={4}\n        linkDirectionalParticleSpeed={d => d.velocity}\n        nodeLabel={n => n.label}\n        linkLabel={l => this.getLinkLabel(l.id)}\n        showNavInfo={false}\n        onLinkClick={link => this.handleHopPressed(link)}\n        nodeThreeObject={({shape, color}) => new Mesh(\n          shapes[shape],\n          new MeshBasicMaterial({color})\n        )}\n      />\n    )\n  }\n\n}\n\nexport default ForceDirectedGraph;\n","import React, {Component} from 'react';\nimport './css/request.css'\n\n\nclass RequestLoader extends Component {\n  render() {\n    return (\n      <div id={\"loader\"} className={this.props.hidden ? \"loader hidden\": \"loader\"}>\n        <div className={\"loader-inner\"}>\n          <div className=\"container\">\n            <div className=\"dot-container\">\n              <div className=\"dot src\"/>\n              <div className=\"dot\"/>\n              <div className=\"dot\"/>\n            </div>\n            <div className=\"dot-container\">\n              <div className=\"dot\"/>\n              <div className=\"dot missed\"/>\n              <div className=\"dot\"/>\n            </div>\n            <div className=\"dot-container\">\n              <div className=\"dot src-dest\"/>\n              <div className=\"dot\"/>\n              <div className=\"dot dest\"/>\n            </div>\n          </div>\n          <p>Loading</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RequestLoader;\n","import React, {Component} from 'react';\nimport './css/preview.css'\n\nclass ItemsPreview extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.focusOnFilter = this.focusOnFilter.bind(this)\n  }\n\n  focusOnFilter() {\n    const container = this.props.queryContainer.current;\n    if (!container.classList.contains(\"opened\")) {\n      container.classList.add(\"opened\")\n    }\n\n    const {itemID} = this.props;\n    const switcher = document.getElementById(`${itemID}-switcher`);\n    switcher.click()\n  }\n\n  render() {\n    const {name, items} = this.props;\n\n    if (!items.length) {\n      return <div/>\n    }\n\n    return (\n      <div className={\"filter-preview-item\"}>\n        <button onClick={this.focusOnFilter} className={\"focus-on-ipv\"}>{name}: <span className={\"items-counter\"}>{items.length}</span></button>\n      </div>\n    )\n  }\n}\n\nclass IPv6Preview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchIPv = this.switchIPv.bind(this)\n  }\n\n  switchIPv () {\n    if (this.props.IPv6) {\n      document.getElementById(\"ipv4-selection\").click()\n    } else {\n      document.getElementById(\"ipv6-selection\").click()\n    }\n\n    const {triggerRequest} = this.props;\n\n    setTimeout(function () {\n      triggerRequest()\n    }, 1000)\n\n  }\n\n  render() {\n    const { IPv6 } = this.props;\n    return (\n      <div className={\"filter-preview-item\"}>\n        <button onClick={this.switchIPv} className={\"focus-on-ipv\"}>{IPv6 ? \"IPv6\": \"IPv4\"}</button>\n      </div>\n    )\n  }\n}\n\nclass TimePreview extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.focusDatetimeFrom = this.focusDatetimeFrom.bind(this);\n    this.focusDatetimeTo = this.focusDatetimeTo.bind(this)\n  }\n\n  focusDatetimeFrom() {\n    const container = document.getElementById(\"time-query\");\n    if (!container.classList.contains(\"opened\")) {\n      const switcher = document.getElementsByClassName(\"search-query-switcher\")[0];\n      switcher.childNodes[0].click()\n    }\n\n    this.focusInput(0)\n  }\n\n  focusDatetimeTo() {\n    const container = document.getElementById(\"time-query\");\n    if (!container.classList.contains(\"opened\")) {\n      const switcher = document.getElementsByClassName(\"search-query-switcher\")[0];\n      switcher.childNodes[0].click()\n    }\n\n    this.focusInput(1)\n  }\n\n  focusInput(index) {\n    const inputs = document.getElementsByClassName(\"form-control\");\n    inputs[index].click()\n  }\n\n  render() {\n    const { datetimeFrom, datetimeTo } = this.props;\n\n    return (\n      <div className={\"filter-preview-item\"}>\n        <i className=\"im im-history\"/>\n        <button onClick={this.focusDatetimeFrom} className={\"focus-on-time\"}>{datetimeFrom.toISOString().slice(0, 19).replace(\"T\", \" \")}</button>\n        <i className=\"im im-arrow-right\"/>\n        <button onClick={this.focusDatetimeTo} className={\"focus-on-time\"}>{datetimeTo.toISOString().slice(0, 19).replace(\"T\", \" \")}</button>\n      </div>\n    )\n  }\n}\n\nclass FiltersPreview extends Component {\n  render() {\n    const { query, itemsFilters, queryContainer } = this.props;\n\n    const itemsFiltersContent = [];\n    itemsFilters.forEach((item, i) => {\n      itemsFiltersContent.push(\n        <ItemsPreview\n          queryContainer={queryContainer}\n          key={`${i}-filter-preview`}\n          name={item.title}\n          items={query[item.id]}\n          itemID={item.id}\n        />\n      )\n    });\n\n    return (\n      <div className={\"filter-preview\"}>\n        <div className={\"filter-preview-inner\"}>\n          <TimePreview\n            datetimeFrom={query.datetimeFrom}\n            datetimeTo={query.datetimeTo}\n          />\n          <IPv6Preview\n            IPv6={query.IPv6}\n            triggerRequest={this.props.triggerRequest}\n          />\n          {itemsFiltersContent}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FiltersPreview;\n","import React, { Component } from 'react';\nimport ItemsQuery from \"./components/filters/items-query\";\nimport TimeQuery from \"./components/filters/time-query\";\nimport IPvQuery from \"./components/filters/ipv-query\";\nimport PathsTable from \"./components/tables/paths-table\";\nimport PathChart from \"./components/viewers/path-chart\";\nimport PathInfo from \"./components/viewers/path-info\";\nimport ForceDirectedGraph from \"./components/graphs/force-directed-graph\";\nimport {dispatchUrl, packUrl} from \"./utils/common\";\nimport RequestLoader from \"./components/loaders/request\";\nimport FiltersPreview from \"./components/filters/preview\";\nimport './App.css';\nimport 'logo.svg';\n\nimport { config } from './constants'\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      responseData: null,\n      pathsStats: null,\n      currentUrl: \"\",\n      interruptedUrl: \"\",\n      query: {\n        datetimeFrom: null,\n        datetimeTo: null,\n        sources: [],\n        sources_hosts: [],\n        destinations: [],\n        destinations_hosts: [],\n        virtual_organisations: [], // not here yet\n        IPv6: false\n      },\n      pathInfo: {\n        filterWrongMeasurements: false\n      },\n      pathTableData: null,\n      graphVisualisation: {\n        threeDimensions: false,\n        linksPower: 1,\n        showMissedHops: false\n      },\n      graphNavigation: {\n        selectedPath: null\n      },\n      pathNavigation: {\n        selectedHop: null\n      }\n    };\n\n    this.pathChartRef = React.createRef();\n    this.queryContainerRef = React.createRef();\n    this.preLoaderContainer = React.createRef();\n    this.preLoaderErrors = React.createRef();\n    this.loaderContainer = React.createRef();\n    this.loaderErrors = React.createRef();\n\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.handlePathSelected = this.handlePathSelected.bind(this);\n    this.handleHopSelected = this.handleHopSelected.bind(this);\n    this.handleHideShow = this.handleHideShow.bind(this);\n\n    this.getData = this.getData.bind(this);\n  }\n\n  async componentDidMount() {\n    let urlParams = window.location.search;\n    let query;\n    let response;\n    let response_content;\n    let retry = 0;\n\n    while (retry < 10) {\n      try {\n        if (!urlParams.length) {\n          response = await fetch(`${config.url.API_URL}query`);\n          response_content = await response.json();\n          query = {...this.state.query};\n          query.datetimeFrom = new Date(response_content[\"datetime_range\"][0]);\n          query.datetimeTo = new Date(response_content[\"datetime_range\"][1])\n        } else {\n          response = await fetch(`${config.url.API_URL}query${urlParams}`);\n          response_content = await response.json();\n          query = dispatchUrl(urlParams);\n        }\n\n        this.preLoaderContainer.current.classList.add(\"hidden\");\n        break;\n      } catch (error) {\n        retry += 1\n        this.preLoaderErrors.current.innerHTML = \"\";\n        this.preLoaderErrors.current.append(\n          `Failed to get response from server. Retry ${retry}/10`\n        );\n        this.preLoaderContainer.current.classList.remove(\"hidden\")\n      }\n    }\n\n    try {\n      if (response_content.status) {\n        urlParams = packUrl(query);\n        const currentUrl = `${config.url.API_URL}query${urlParams}`;\n        window.history.pushState(null, 'queried', window.location.origin + urlParams);\n        const responseData = response_content['es_data'];\n        const pathsStats = response_content['stats'];\n        this.setState({query, responseData, pathsStats, currentUrl})\n        if (this.preLoaderErrors.current) {\n          this.preLoaderContainer.current.classList.add(\"hidden\")\n        }\n      } else {\n        alert(JSON.stringify(response_content.message))\n      }\n    } catch (error) {\n      if (this.preLoaderErrors.current) {\n        this.preLoaderErrors.current.innerHTML = \"\";\n        this.preLoaderErrors.current.append(\n          `Failed to get response from server. Try later.`\n        )\n      }\n    }\n\n  }\n\n  handleQueryChange(query) {\n    this.setState({query})\n  }\n\n  handlePathSelected(pathID) {\n    const {graphNavigation} = this.state;\n    if (pathID === graphNavigation.selectedPath) {\n      graphNavigation.selectedPath = null;\n    } else {\n      graphNavigation.selectedPath = pathID;\n    }\n    this.setState({graphNavigation})\n  }\n\n  handleHopSelected(pathNavigation) {\n    this.setState({pathNavigation})\n  }\n\n  async getData() {\n    const query = this.state.query;\n    const urlParams = packUrl(query);\n    let url;\n    let retry = 0;\n\n    const loader = document.getElementById(\"loader\");\n    loader.classList.remove(\"hidden\");\n\n    url = `${config.url.API_URL}query${urlParams}`;\n    window.history.pushState(null, 'queried', window.location.origin + urlParams);\n    if (url !== this.state.currentUrl) {\n      while (retry < 10) {\n        try {\n          await fetch(url)\n            .then(res => res.json())\n            .then(responseData => {\n              if (responseData.status) {\n                if (responseData[\"number_of_paths\"] > 50) {\n                  let answer = window.confirm(`Number of paths is ${responseData[\"number_of_paths\"]}, which is not recommended for rendering. Are you sure you want to continue?`);\n                  if (answer) {\n                    this.setState({pathsStats: responseData['stats']});\n                    this.setState({responseData: responseData['es_data']});\n                  }\n                } else {\n                  this.setState({pathsStats: responseData['stats']});\n                  this.setState({responseData: responseData['es_data']});\n                }\n              } else {\n                alert(JSON.stringify(responseData.message))\n              }\n            });\n          this.loaderContainer.current.classList.add(\"hidden\");\n          retry = 10\n        } catch (error) {\n          retry += 1\n          this.loaderErrors.current.innerHTML = \"\";\n          this.loaderErrors.current.append(\n            `Failed to get response from server. Retry ${retry}/10`\n          )\n          this.loaderContainer.current.classList.remove(\"hidden\");\n        }\n      }\n\n      this.setState({currentUrl: url})\n    }\n\n    loader.classList.add(\"hidden\");\n  }\n\n  handleHideShow() {\n    const classList = this.queryContainerRef.current.classList;\n    if (classList.contains(\"opened\")) {\n      classList.remove(\"opened\")\n    } else {\n      classList.add(\"opened\")\n    }\n  }\n\n  render() {\n    if (this.state.responseData === null) {\n      return (\n        <div>\n          <RequestLoader\n            hidden={false}\n          />\n          <div ref={this.preLoaderContainer} className={\"errors-on-load hidden\"}>\n            <p ref={this.preLoaderErrors}/>\n          </div>\n        </div>\n      )\n    }\n\n    let itemsFilters = [\n      {title: \"Sources\", id: \"sources\", hideIPs: false},\n      {title: \"Sources hosts\", id: \"sources_hosts\", hideIPs: true},\n      {title: \"Destinations\", id: \"destinations\", hideIPs: false},\n      {title: \"Destinations hosts\", id: \"destinations_hosts\", hideIPs: true}\n    ];\n\n    return (\n      <div className={\"app-wrapper\"}>\n        <FiltersPreview\n          queryContainer={this.queryContainerRef}\n          query={this.state.query}\n          itemsFilters={itemsFilters}\n          triggerRequest={this.getData}\n        />\n        <div ref={this.queryContainerRef} className={\"query-container opened\"} onMouseLeave={this.getData}>\n          <div className={\"query-container-inner\"}>\n            <div id={\"query-switcher\"}>\n              <button onClick={this.handleHideShow}>\n                <i className=\"im im-arrow-right\"/>\n              </button>\n            </div>\n            <div className={\"query-container-body\"}>\n              <div id={\"logo\"} onClick={() => document.location.href = \"/\"}/>\n              <TimeQuery\n                query={this.state.query}\n                onQueryChange={this.handleQueryChange}\n              />\n              <div className={\"query-separator\"}/>\n              <IPvQuery\n                strikeQuery={this.getData}\n                query={this.state.query}\n                onQueryChange={this.handleQueryChange}\n              />\n              <div className={\"query-separator\"}/>\n              <ItemsQuery\n                strikeQuery={this.getData}\n                query={this.state.query}\n                itemsFilters={itemsFilters}\n                aggregations={this.state.responseData.aggregations}\n                onQueryChange={this.handleQueryChange}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={\"table-container\"}>\n          <PathsTable\n            paths={this.state.responseData['hits']['hits']}\n            onPathSelected={this.handlePathSelected}\n            selectedPath={this.state.graphNavigation.selectedPath}\n            onHopSelected={this.handleHopSelected}\n          />\n        </div>\n        <div className={\"path-chart-container\"}>\n          <PathChart\n            pathChartRef={this.pathChartRef}\n            pathInfo={this.state.pathInfo}\n            paths={this.state.responseData['hits']['hits']}\n            selectedPath={this.state.graphNavigation.selectedPath}\n            onHopSelected={this.handleHopSelected}\n          />\n        </div>\n        <div className={\"path-info-container\"}>\n          <PathInfo\n            pathChart={this.pathChartRef}\n            pathInfo={this.state.pathInfo}\n            paths={this.state.responseData['hits']['hits']}\n            pathsStats={this.state.pathsStats}\n            selectedPath={this.state.graphNavigation.selectedPath}\n            selectedHop={this.state.pathNavigation.selectedHop}\n            onHopSelected={this.handleHopSelected}\n          />\n        </div>\n        <div id={\"graph-container\"}>\n          <ForceDirectedGraph\n            responseData={this.state.responseData}\n            pathsStats={this.state.pathsStats}\n            graphVisualisation={this.state.graphVisualisation}\n            graphNavigation={this.state.graphNavigation}\n            pathNavigation={this.state.pathNavigation}\n            onHopSelected={this.handleHopSelected}\n            onPathSelected={this.handlePathSelected}\n            selectedPath={this.state.graphNavigation.selectedPath}\n            selectedHop={this.state.pathNavigation.selectedHop}\n          />\n        </div>\n        <div>\n          <RequestLoader\n            hidden={true}\n          />\n          <div ref={this.loaderContainer} className={\"errors-on-load hidden\"}>\n            <p ref={this.loaderErrors}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}